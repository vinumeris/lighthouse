// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: extended-bip70.proto

package lighthouse.protocol;

public final class LHProtos {
  private LHProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface OutputOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint64 amount = 1 [default = 0];
    /**
     * <code>optional uint64 amount = 1 [default = 0];</code>
     *
     * <pre>
     * amount is integer-number-of-satoshis
     * </pre>
     */
    boolean hasAmount();
    /**
     * <code>optional uint64 amount = 1 [default = 0];</code>
     *
     * <pre>
     * amount is integer-number-of-satoshis
     * </pre>
     */
    long getAmount();

    // required bytes script = 2;
    /**
     * <code>required bytes script = 2;</code>
     *
     * <pre>
     * usually one of the standard Script forms
     * </pre>
     */
    boolean hasScript();
    /**
     * <code>required bytes script = 2;</code>
     *
     * <pre>
     * usually one of the standard Script forms
     * </pre>
     */
    com.google.protobuf.ByteString getScript();
  }
  /**
   * Protobuf type {@code lighthouse.Output}
   */
  public static final class Output extends
      com.google.protobuf.GeneratedMessage
      implements OutputOrBuilder {
    // Use Output.newBuilder() to construct.
    private Output(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Output(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Output defaultInstance;
    public static Output getDefaultInstance() {
      return defaultInstance;
    }

    public Output getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Output(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              amount_ = input.readUInt64();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              script_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return lighthouse.protocol.LHProtos.internal_static_lighthouse_Output_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return lighthouse.protocol.LHProtos.internal_static_lighthouse_Output_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              lighthouse.protocol.LHProtos.Output.class, lighthouse.protocol.LHProtos.Output.Builder.class);
    }

    public static com.google.protobuf.Parser<Output> PARSER =
        new com.google.protobuf.AbstractParser<Output>() {
      public Output parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Output(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Output> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint64 amount = 1 [default = 0];
    public static final int AMOUNT_FIELD_NUMBER = 1;
    private long amount_;
    /**
     * <code>optional uint64 amount = 1 [default = 0];</code>
     *
     * <pre>
     * amount is integer-number-of-satoshis
     * </pre>
     */
    public boolean hasAmount() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint64 amount = 1 [default = 0];</code>
     *
     * <pre>
     * amount is integer-number-of-satoshis
     * </pre>
     */
    public long getAmount() {
      return amount_;
    }

    // required bytes script = 2;
    public static final int SCRIPT_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString script_;
    /**
     * <code>required bytes script = 2;</code>
     *
     * <pre>
     * usually one of the standard Script forms
     * </pre>
     */
    public boolean hasScript() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required bytes script = 2;</code>
     *
     * <pre>
     * usually one of the standard Script forms
     * </pre>
     */
    public com.google.protobuf.ByteString getScript() {
      return script_;
    }

    private void initFields() {
      amount_ = 0L;
      script_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasScript()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, amount_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, script_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, amount_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, script_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static lighthouse.protocol.LHProtos.Output parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static lighthouse.protocol.LHProtos.Output parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static lighthouse.protocol.LHProtos.Output parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static lighthouse.protocol.LHProtos.Output parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static lighthouse.protocol.LHProtos.Output parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static lighthouse.protocol.LHProtos.Output parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static lighthouse.protocol.LHProtos.Output parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static lighthouse.protocol.LHProtos.Output parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static lighthouse.protocol.LHProtos.Output parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static lighthouse.protocol.LHProtos.Output parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(lighthouse.protocol.LHProtos.Output prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code lighthouse.Output}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements lighthouse.protocol.LHProtos.OutputOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return lighthouse.protocol.LHProtos.internal_static_lighthouse_Output_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return lighthouse.protocol.LHProtos.internal_static_lighthouse_Output_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                lighthouse.protocol.LHProtos.Output.class, lighthouse.protocol.LHProtos.Output.Builder.class);
      }

      // Construct using lighthouse.protocol.LHProtos.Output.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        amount_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        script_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return lighthouse.protocol.LHProtos.internal_static_lighthouse_Output_descriptor;
      }

      public lighthouse.protocol.LHProtos.Output getDefaultInstanceForType() {
        return lighthouse.protocol.LHProtos.Output.getDefaultInstance();
      }

      public lighthouse.protocol.LHProtos.Output build() {
        lighthouse.protocol.LHProtos.Output result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public lighthouse.protocol.LHProtos.Output buildPartial() {
        lighthouse.protocol.LHProtos.Output result = new lighthouse.protocol.LHProtos.Output(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.amount_ = amount_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.script_ = script_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof lighthouse.protocol.LHProtos.Output) {
          return mergeFrom((lighthouse.protocol.LHProtos.Output)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(lighthouse.protocol.LHProtos.Output other) {
        if (other == lighthouse.protocol.LHProtos.Output.getDefaultInstance()) return this;
        if (other.hasAmount()) {
          setAmount(other.getAmount());
        }
        if (other.hasScript()) {
          setScript(other.getScript());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasScript()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        lighthouse.protocol.LHProtos.Output parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (lighthouse.protocol.LHProtos.Output) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional uint64 amount = 1 [default = 0];
      private long amount_ ;
      /**
       * <code>optional uint64 amount = 1 [default = 0];</code>
       *
       * <pre>
       * amount is integer-number-of-satoshis
       * </pre>
       */
      public boolean hasAmount() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint64 amount = 1 [default = 0];</code>
       *
       * <pre>
       * amount is integer-number-of-satoshis
       * </pre>
       */
      public long getAmount() {
        return amount_;
      }
      /**
       * <code>optional uint64 amount = 1 [default = 0];</code>
       *
       * <pre>
       * amount is integer-number-of-satoshis
       * </pre>
       */
      public Builder setAmount(long value) {
        bitField0_ |= 0x00000001;
        amount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 amount = 1 [default = 0];</code>
       *
       * <pre>
       * amount is integer-number-of-satoshis
       * </pre>
       */
      public Builder clearAmount() {
        bitField0_ = (bitField0_ & ~0x00000001);
        amount_ = 0L;
        onChanged();
        return this;
      }

      // required bytes script = 2;
      private com.google.protobuf.ByteString script_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes script = 2;</code>
       *
       * <pre>
       * usually one of the standard Script forms
       * </pre>
       */
      public boolean hasScript() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required bytes script = 2;</code>
       *
       * <pre>
       * usually one of the standard Script forms
       * </pre>
       */
      public com.google.protobuf.ByteString getScript() {
        return script_;
      }
      /**
       * <code>required bytes script = 2;</code>
       *
       * <pre>
       * usually one of the standard Script forms
       * </pre>
       */
      public Builder setScript(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        script_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes script = 2;</code>
       *
       * <pre>
       * usually one of the standard Script forms
       * </pre>
       */
      public Builder clearScript() {
        bitField0_ = (bitField0_ & ~0x00000002);
        script_ = getDefaultInstance().getScript();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:lighthouse.Output)
    }

    static {
      defaultInstance = new Output(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:lighthouse.Output)
  }

  public interface ProjectExtraDetailsOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string title = 1;
    /**
     * <code>required string title = 1;</code>
     */
    boolean hasTitle();
    /**
     * <code>required string title = 1;</code>
     */
    java.lang.String getTitle();
    /**
     * <code>required string title = 1;</code>
     */
    com.google.protobuf.ByteString
        getTitleBytes();

    // optional bytes cover_image = 2;
    /**
     * <code>optional bytes cover_image = 2;</code>
     *
     * <pre>
     * If missing, a default image is used. If set, should be a JPEG file that looks good with a ratio of 650:200
     * although actual pixel density should be larger than that.
     * </pre>
     */
    boolean hasCoverImage();
    /**
     * <code>optional bytes cover_image = 2;</code>
     *
     * <pre>
     * If missing, a default image is used. If set, should be a JPEG file that looks good with a ratio of 650:200
     * although actual pixel density should be larger than that.
     * </pre>
     */
    com.google.protobuf.ByteString getCoverImage();

    // optional bytes auth_key = 3;
    /**
     * <code>optional bytes auth_key = 3;</code>
     *
     * <pre>
     * a secp256k1 public key that can be used as a lightweight way to prove ownership of this project. This is
     * slightly redundant with the BIP70 signing mechanism except that this key is not connected to any form of
     * identity: it's used only for telling the server to reveal un-scrubbed pledges so the client can claim.
     * Usually this is initialised to a wallet key when the project is created.
     * </pre>
     */
    boolean hasAuthKey();
    /**
     * <code>optional bytes auth_key = 3;</code>
     *
     * <pre>
     * a secp256k1 public key that can be used as a lightweight way to prove ownership of this project. This is
     * slightly redundant with the BIP70 signing mechanism except that this key is not connected to any form of
     * identity: it's used only for telling the server to reveal un-scrubbed pledges so the client can claim.
     * Usually this is initialised to a wallet key when the project is created.
     * </pre>
     */
    com.google.protobuf.ByteString getAuthKey();

    // optional int64 min_pledge_size = 4;
    /**
     * <code>optional int64 min_pledge_size = 4;</code>
     *
     * <pre>
     * Smallest plege in satoshis we are willing to accept for this project. Typically this will be calculated by
     * dividing the goal amount by the max number of inputs we're allowed in a standard transaction. In future might
     * be overridable in server assisted cases.
     * TODO: Make required after alpha users have upgraded and no more alpha projects are hanging around.
     * </pre>
     */
    boolean hasMinPledgeSize();
    /**
     * <code>optional int64 min_pledge_size = 4;</code>
     *
     * <pre>
     * Smallest plege in satoshis we are willing to accept for this project. Typically this will be calculated by
     * dividing the goal amount by the max number of inputs we're allowed in a standard transaction. In future might
     * be overridable in server assisted cases.
     * TODO: Make required after alpha users have upgraded and no more alpha projects are hanging around.
     * </pre>
     */
    long getMinPledgeSize();

    // optional string email = 5;
    /**
     * <code>optional string email = 5;</code>
     */
    boolean hasEmail();
    /**
     * <code>optional string email = 5;</code>
     */
    java.lang.String getEmail();
    /**
     * <code>optional string email = 5;</code>
     */
    com.google.protobuf.ByteString
        getEmailBytes();
  }
  /**
   * Protobuf type {@code lighthouse.ProjectExtraDetails}
   *
   * <pre>
   * Stuff specific to Lighthouse
   * </pre>
   */
  public static final class ProjectExtraDetails extends
      com.google.protobuf.GeneratedMessage
      implements ProjectExtraDetailsOrBuilder {
    // Use ProjectExtraDetails.newBuilder() to construct.
    private ProjectExtraDetails(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ProjectExtraDetails(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ProjectExtraDetails defaultInstance;
    public static ProjectExtraDetails getDefaultInstance() {
      return defaultInstance;
    }

    public ProjectExtraDetails getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ProjectExtraDetails(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              title_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              coverImage_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              authKey_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              minPledgeSize_ = input.readInt64();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              email_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return lighthouse.protocol.LHProtos.internal_static_lighthouse_ProjectExtraDetails_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return lighthouse.protocol.LHProtos.internal_static_lighthouse_ProjectExtraDetails_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              lighthouse.protocol.LHProtos.ProjectExtraDetails.class, lighthouse.protocol.LHProtos.ProjectExtraDetails.Builder.class);
    }

    public static com.google.protobuf.Parser<ProjectExtraDetails> PARSER =
        new com.google.protobuf.AbstractParser<ProjectExtraDetails>() {
      public ProjectExtraDetails parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ProjectExtraDetails(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ProjectExtraDetails> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string title = 1;
    public static final int TITLE_FIELD_NUMBER = 1;
    private java.lang.Object title_;
    /**
     * <code>required string title = 1;</code>
     */
    public boolean hasTitle() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string title = 1;</code>
     */
    public java.lang.String getTitle() {
      java.lang.Object ref = title_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          title_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string title = 1;</code>
     */
    public com.google.protobuf.ByteString
        getTitleBytes() {
      java.lang.Object ref = title_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        title_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional bytes cover_image = 2;
    public static final int COVER_IMAGE_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString coverImage_;
    /**
     * <code>optional bytes cover_image = 2;</code>
     *
     * <pre>
     * If missing, a default image is used. If set, should be a JPEG file that looks good with a ratio of 650:200
     * although actual pixel density should be larger than that.
     * </pre>
     */
    public boolean hasCoverImage() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bytes cover_image = 2;</code>
     *
     * <pre>
     * If missing, a default image is used. If set, should be a JPEG file that looks good with a ratio of 650:200
     * although actual pixel density should be larger than that.
     * </pre>
     */
    public com.google.protobuf.ByteString getCoverImage() {
      return coverImage_;
    }

    // optional bytes auth_key = 3;
    public static final int AUTH_KEY_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString authKey_;
    /**
     * <code>optional bytes auth_key = 3;</code>
     *
     * <pre>
     * a secp256k1 public key that can be used as a lightweight way to prove ownership of this project. This is
     * slightly redundant with the BIP70 signing mechanism except that this key is not connected to any form of
     * identity: it's used only for telling the server to reveal un-scrubbed pledges so the client can claim.
     * Usually this is initialised to a wallet key when the project is created.
     * </pre>
     */
    public boolean hasAuthKey() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bytes auth_key = 3;</code>
     *
     * <pre>
     * a secp256k1 public key that can be used as a lightweight way to prove ownership of this project. This is
     * slightly redundant with the BIP70 signing mechanism except that this key is not connected to any form of
     * identity: it's used only for telling the server to reveal un-scrubbed pledges so the client can claim.
     * Usually this is initialised to a wallet key when the project is created.
     * </pre>
     */
    public com.google.protobuf.ByteString getAuthKey() {
      return authKey_;
    }

    // optional int64 min_pledge_size = 4;
    public static final int MIN_PLEDGE_SIZE_FIELD_NUMBER = 4;
    private long minPledgeSize_;
    /**
     * <code>optional int64 min_pledge_size = 4;</code>
     *
     * <pre>
     * Smallest plege in satoshis we are willing to accept for this project. Typically this will be calculated by
     * dividing the goal amount by the max number of inputs we're allowed in a standard transaction. In future might
     * be overridable in server assisted cases.
     * TODO: Make required after alpha users have upgraded and no more alpha projects are hanging around.
     * </pre>
     */
    public boolean hasMinPledgeSize() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int64 min_pledge_size = 4;</code>
     *
     * <pre>
     * Smallest plege in satoshis we are willing to accept for this project. Typically this will be calculated by
     * dividing the goal amount by the max number of inputs we're allowed in a standard transaction. In future might
     * be overridable in server assisted cases.
     * TODO: Make required after alpha users have upgraded and no more alpha projects are hanging around.
     * </pre>
     */
    public long getMinPledgeSize() {
      return minPledgeSize_;
    }

    // optional string email = 5;
    public static final int EMAIL_FIELD_NUMBER = 5;
    private java.lang.Object email_;
    /**
     * <code>optional string email = 5;</code>
     */
    public boolean hasEmail() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string email = 5;</code>
     */
    public java.lang.String getEmail() {
      java.lang.Object ref = email_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          email_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string email = 5;</code>
     */
    public com.google.protobuf.ByteString
        getEmailBytes() {
      java.lang.Object ref = email_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        email_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      title_ = "";
      coverImage_ = com.google.protobuf.ByteString.EMPTY;
      authKey_ = com.google.protobuf.ByteString.EMPTY;
      minPledgeSize_ = 0L;
      email_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasTitle()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getTitleBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, coverImage_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, authKey_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(4, minPledgeSize_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getEmailBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getTitleBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, coverImage_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, authKey_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, minPledgeSize_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getEmailBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static lighthouse.protocol.LHProtos.ProjectExtraDetails parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static lighthouse.protocol.LHProtos.ProjectExtraDetails parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static lighthouse.protocol.LHProtos.ProjectExtraDetails parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static lighthouse.protocol.LHProtos.ProjectExtraDetails parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static lighthouse.protocol.LHProtos.ProjectExtraDetails parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static lighthouse.protocol.LHProtos.ProjectExtraDetails parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static lighthouse.protocol.LHProtos.ProjectExtraDetails parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static lighthouse.protocol.LHProtos.ProjectExtraDetails parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static lighthouse.protocol.LHProtos.ProjectExtraDetails parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static lighthouse.protocol.LHProtos.ProjectExtraDetails parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(lighthouse.protocol.LHProtos.ProjectExtraDetails prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code lighthouse.ProjectExtraDetails}
     *
     * <pre>
     * Stuff specific to Lighthouse
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements lighthouse.protocol.LHProtos.ProjectExtraDetailsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return lighthouse.protocol.LHProtos.internal_static_lighthouse_ProjectExtraDetails_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return lighthouse.protocol.LHProtos.internal_static_lighthouse_ProjectExtraDetails_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                lighthouse.protocol.LHProtos.ProjectExtraDetails.class, lighthouse.protocol.LHProtos.ProjectExtraDetails.Builder.class);
      }

      // Construct using lighthouse.protocol.LHProtos.ProjectExtraDetails.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        title_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        coverImage_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        authKey_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        minPledgeSize_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        email_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return lighthouse.protocol.LHProtos.internal_static_lighthouse_ProjectExtraDetails_descriptor;
      }

      public lighthouse.protocol.LHProtos.ProjectExtraDetails getDefaultInstanceForType() {
        return lighthouse.protocol.LHProtos.ProjectExtraDetails.getDefaultInstance();
      }

      public lighthouse.protocol.LHProtos.ProjectExtraDetails build() {
        lighthouse.protocol.LHProtos.ProjectExtraDetails result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public lighthouse.protocol.LHProtos.ProjectExtraDetails buildPartial() {
        lighthouse.protocol.LHProtos.ProjectExtraDetails result = new lighthouse.protocol.LHProtos.ProjectExtraDetails(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.title_ = title_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.coverImage_ = coverImage_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.authKey_ = authKey_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.minPledgeSize_ = minPledgeSize_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.email_ = email_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof lighthouse.protocol.LHProtos.ProjectExtraDetails) {
          return mergeFrom((lighthouse.protocol.LHProtos.ProjectExtraDetails)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(lighthouse.protocol.LHProtos.ProjectExtraDetails other) {
        if (other == lighthouse.protocol.LHProtos.ProjectExtraDetails.getDefaultInstance()) return this;
        if (other.hasTitle()) {
          bitField0_ |= 0x00000001;
          title_ = other.title_;
          onChanged();
        }
        if (other.hasCoverImage()) {
          setCoverImage(other.getCoverImage());
        }
        if (other.hasAuthKey()) {
          setAuthKey(other.getAuthKey());
        }
        if (other.hasMinPledgeSize()) {
          setMinPledgeSize(other.getMinPledgeSize());
        }
        if (other.hasEmail()) {
          bitField0_ |= 0x00000010;
          email_ = other.email_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTitle()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        lighthouse.protocol.LHProtos.ProjectExtraDetails parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (lighthouse.protocol.LHProtos.ProjectExtraDetails) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string title = 1;
      private java.lang.Object title_ = "";
      /**
       * <code>required string title = 1;</code>
       */
      public boolean hasTitle() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string title = 1;</code>
       */
      public java.lang.String getTitle() {
        java.lang.Object ref = title_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          title_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string title = 1;</code>
       */
      public com.google.protobuf.ByteString
          getTitleBytes() {
        java.lang.Object ref = title_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          title_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string title = 1;</code>
       */
      public Builder setTitle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        title_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string title = 1;</code>
       */
      public Builder clearTitle() {
        bitField0_ = (bitField0_ & ~0x00000001);
        title_ = getDefaultInstance().getTitle();
        onChanged();
        return this;
      }
      /**
       * <code>required string title = 1;</code>
       */
      public Builder setTitleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        title_ = value;
        onChanged();
        return this;
      }

      // optional bytes cover_image = 2;
      private com.google.protobuf.ByteString coverImage_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes cover_image = 2;</code>
       *
       * <pre>
       * If missing, a default image is used. If set, should be a JPEG file that looks good with a ratio of 650:200
       * although actual pixel density should be larger than that.
       * </pre>
       */
      public boolean hasCoverImage() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bytes cover_image = 2;</code>
       *
       * <pre>
       * If missing, a default image is used. If set, should be a JPEG file that looks good with a ratio of 650:200
       * although actual pixel density should be larger than that.
       * </pre>
       */
      public com.google.protobuf.ByteString getCoverImage() {
        return coverImage_;
      }
      /**
       * <code>optional bytes cover_image = 2;</code>
       *
       * <pre>
       * If missing, a default image is used. If set, should be a JPEG file that looks good with a ratio of 650:200
       * although actual pixel density should be larger than that.
       * </pre>
       */
      public Builder setCoverImage(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        coverImage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes cover_image = 2;</code>
       *
       * <pre>
       * If missing, a default image is used. If set, should be a JPEG file that looks good with a ratio of 650:200
       * although actual pixel density should be larger than that.
       * </pre>
       */
      public Builder clearCoverImage() {
        bitField0_ = (bitField0_ & ~0x00000002);
        coverImage_ = getDefaultInstance().getCoverImage();
        onChanged();
        return this;
      }

      // optional bytes auth_key = 3;
      private com.google.protobuf.ByteString authKey_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes auth_key = 3;</code>
       *
       * <pre>
       * a secp256k1 public key that can be used as a lightweight way to prove ownership of this project. This is
       * slightly redundant with the BIP70 signing mechanism except that this key is not connected to any form of
       * identity: it's used only for telling the server to reveal un-scrubbed pledges so the client can claim.
       * Usually this is initialised to a wallet key when the project is created.
       * </pre>
       */
      public boolean hasAuthKey() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bytes auth_key = 3;</code>
       *
       * <pre>
       * a secp256k1 public key that can be used as a lightweight way to prove ownership of this project. This is
       * slightly redundant with the BIP70 signing mechanism except that this key is not connected to any form of
       * identity: it's used only for telling the server to reveal un-scrubbed pledges so the client can claim.
       * Usually this is initialised to a wallet key when the project is created.
       * </pre>
       */
      public com.google.protobuf.ByteString getAuthKey() {
        return authKey_;
      }
      /**
       * <code>optional bytes auth_key = 3;</code>
       *
       * <pre>
       * a secp256k1 public key that can be used as a lightweight way to prove ownership of this project. This is
       * slightly redundant with the BIP70 signing mechanism except that this key is not connected to any form of
       * identity: it's used only for telling the server to reveal un-scrubbed pledges so the client can claim.
       * Usually this is initialised to a wallet key when the project is created.
       * </pre>
       */
      public Builder setAuthKey(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        authKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes auth_key = 3;</code>
       *
       * <pre>
       * a secp256k1 public key that can be used as a lightweight way to prove ownership of this project. This is
       * slightly redundant with the BIP70 signing mechanism except that this key is not connected to any form of
       * identity: it's used only for telling the server to reveal un-scrubbed pledges so the client can claim.
       * Usually this is initialised to a wallet key when the project is created.
       * </pre>
       */
      public Builder clearAuthKey() {
        bitField0_ = (bitField0_ & ~0x00000004);
        authKey_ = getDefaultInstance().getAuthKey();
        onChanged();
        return this;
      }

      // optional int64 min_pledge_size = 4;
      private long minPledgeSize_ ;
      /**
       * <code>optional int64 min_pledge_size = 4;</code>
       *
       * <pre>
       * Smallest plege in satoshis we are willing to accept for this project. Typically this will be calculated by
       * dividing the goal amount by the max number of inputs we're allowed in a standard transaction. In future might
       * be overridable in server assisted cases.
       * TODO: Make required after alpha users have upgraded and no more alpha projects are hanging around.
       * </pre>
       */
      public boolean hasMinPledgeSize() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int64 min_pledge_size = 4;</code>
       *
       * <pre>
       * Smallest plege in satoshis we are willing to accept for this project. Typically this will be calculated by
       * dividing the goal amount by the max number of inputs we're allowed in a standard transaction. In future might
       * be overridable in server assisted cases.
       * TODO: Make required after alpha users have upgraded and no more alpha projects are hanging around.
       * </pre>
       */
      public long getMinPledgeSize() {
        return minPledgeSize_;
      }
      /**
       * <code>optional int64 min_pledge_size = 4;</code>
       *
       * <pre>
       * Smallest plege in satoshis we are willing to accept for this project. Typically this will be calculated by
       * dividing the goal amount by the max number of inputs we're allowed in a standard transaction. In future might
       * be overridable in server assisted cases.
       * TODO: Make required after alpha users have upgraded and no more alpha projects are hanging around.
       * </pre>
       */
      public Builder setMinPledgeSize(long value) {
        bitField0_ |= 0x00000008;
        minPledgeSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 min_pledge_size = 4;</code>
       *
       * <pre>
       * Smallest plege in satoshis we are willing to accept for this project. Typically this will be calculated by
       * dividing the goal amount by the max number of inputs we're allowed in a standard transaction. In future might
       * be overridable in server assisted cases.
       * TODO: Make required after alpha users have upgraded and no more alpha projects are hanging around.
       * </pre>
       */
      public Builder clearMinPledgeSize() {
        bitField0_ = (bitField0_ & ~0x00000008);
        minPledgeSize_ = 0L;
        onChanged();
        return this;
      }

      // optional string email = 5;
      private java.lang.Object email_ = "";
      /**
       * <code>optional string email = 5;</code>
       */
      public boolean hasEmail() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string email = 5;</code>
       */
      public java.lang.String getEmail() {
        java.lang.Object ref = email_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          email_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string email = 5;</code>
       */
      public com.google.protobuf.ByteString
          getEmailBytes() {
        java.lang.Object ref = email_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          email_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string email = 5;</code>
       */
      public Builder setEmail(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        email_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string email = 5;</code>
       */
      public Builder clearEmail() {
        bitField0_ = (bitField0_ & ~0x00000010);
        email_ = getDefaultInstance().getEmail();
        onChanged();
        return this;
      }
      /**
       * <code>optional string email = 5;</code>
       */
      public Builder setEmailBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        email_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:lighthouse.ProjectExtraDetails)
    }

    static {
      defaultInstance = new ProjectExtraDetails(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:lighthouse.ProjectExtraDetails)
  }

  public interface OwnerDataOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 auth_key_index = 1;
    /**
     * <code>optional uint32 auth_key_index = 1;</code>
     *
     * <pre>
     * If auth_key might not be easily located by the project owner because it's beyond the lookahead zone that's
     * pre-calculated when a wallet is restored from seed words, we stash the index here. It results in a minor
     * privacy leak: for people who created bajillions of projects out of the same wallet it leaks how many they've
     * created so far. However it means people can restore ownership of a project from the same file they made public
     * and the seed words, making it more robust against data loss. For most users who don't create many projects it
     * will be missing and thus not pose any privacy issues.
     * </pre>
     */
    boolean hasAuthKeyIndex();
    /**
     * <code>optional uint32 auth_key_index = 1;</code>
     *
     * <pre>
     * If auth_key might not be easily located by the project owner because it's beyond the lookahead zone that's
     * pre-calculated when a wallet is restored from seed words, we stash the index here. It results in a minor
     * privacy leak: for people who created bajillions of projects out of the same wallet it leaks how many they've
     * created so far. However it means people can restore ownership of a project from the same file they made public
     * and the seed words, making it more robust against data loss. For most users who don't create many projects it
     * will be missing and thus not pose any privacy issues.
     * </pre>
     */
    int getAuthKeyIndex();
  }
  /**
   * Protobuf type {@code lighthouse.OwnerData}
   *
   * <pre>
   * Data used only by the owner. This format may change arbitrarily between Lighthouse versions or be totally different
   * if this protocol is implemented by another app. Clients should not attempt to interpret it unless they created it.
   * </pre>
   */
  public static final class OwnerData extends
      com.google.protobuf.GeneratedMessage
      implements OwnerDataOrBuilder {
    // Use OwnerData.newBuilder() to construct.
    private OwnerData(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private OwnerData(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final OwnerData defaultInstance;
    public static OwnerData getDefaultInstance() {
      return defaultInstance;
    }

    public OwnerData getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private OwnerData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              authKeyIndex_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return lighthouse.protocol.LHProtos.internal_static_lighthouse_OwnerData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return lighthouse.protocol.LHProtos.internal_static_lighthouse_OwnerData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              lighthouse.protocol.LHProtos.OwnerData.class, lighthouse.protocol.LHProtos.OwnerData.Builder.class);
    }

    public static com.google.protobuf.Parser<OwnerData> PARSER =
        new com.google.protobuf.AbstractParser<OwnerData>() {
      public OwnerData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new OwnerData(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<OwnerData> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 auth_key_index = 1;
    public static final int AUTH_KEY_INDEX_FIELD_NUMBER = 1;
    private int authKeyIndex_;
    /**
     * <code>optional uint32 auth_key_index = 1;</code>
     *
     * <pre>
     * If auth_key might not be easily located by the project owner because it's beyond the lookahead zone that's
     * pre-calculated when a wallet is restored from seed words, we stash the index here. It results in a minor
     * privacy leak: for people who created bajillions of projects out of the same wallet it leaks how many they've
     * created so far. However it means people can restore ownership of a project from the same file they made public
     * and the seed words, making it more robust against data loss. For most users who don't create many projects it
     * will be missing and thus not pose any privacy issues.
     * </pre>
     */
    public boolean hasAuthKeyIndex() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 auth_key_index = 1;</code>
     *
     * <pre>
     * If auth_key might not be easily located by the project owner because it's beyond the lookahead zone that's
     * pre-calculated when a wallet is restored from seed words, we stash the index here. It results in a minor
     * privacy leak: for people who created bajillions of projects out of the same wallet it leaks how many they've
     * created so far. However it means people can restore ownership of a project from the same file they made public
     * and the seed words, making it more robust against data loss. For most users who don't create many projects it
     * will be missing and thus not pose any privacy issues.
     * </pre>
     */
    public int getAuthKeyIndex() {
      return authKeyIndex_;
    }

    private void initFields() {
      authKeyIndex_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, authKeyIndex_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, authKeyIndex_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static lighthouse.protocol.LHProtos.OwnerData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static lighthouse.protocol.LHProtos.OwnerData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static lighthouse.protocol.LHProtos.OwnerData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static lighthouse.protocol.LHProtos.OwnerData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static lighthouse.protocol.LHProtos.OwnerData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static lighthouse.protocol.LHProtos.OwnerData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static lighthouse.protocol.LHProtos.OwnerData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static lighthouse.protocol.LHProtos.OwnerData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static lighthouse.protocol.LHProtos.OwnerData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static lighthouse.protocol.LHProtos.OwnerData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(lighthouse.protocol.LHProtos.OwnerData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code lighthouse.OwnerData}
     *
     * <pre>
     * Data used only by the owner. This format may change arbitrarily between Lighthouse versions or be totally different
     * if this protocol is implemented by another app. Clients should not attempt to interpret it unless they created it.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements lighthouse.protocol.LHProtos.OwnerDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return lighthouse.protocol.LHProtos.internal_static_lighthouse_OwnerData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return lighthouse.protocol.LHProtos.internal_static_lighthouse_OwnerData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                lighthouse.protocol.LHProtos.OwnerData.class, lighthouse.protocol.LHProtos.OwnerData.Builder.class);
      }

      // Construct using lighthouse.protocol.LHProtos.OwnerData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        authKeyIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return lighthouse.protocol.LHProtos.internal_static_lighthouse_OwnerData_descriptor;
      }

      public lighthouse.protocol.LHProtos.OwnerData getDefaultInstanceForType() {
        return lighthouse.protocol.LHProtos.OwnerData.getDefaultInstance();
      }

      public lighthouse.protocol.LHProtos.OwnerData build() {
        lighthouse.protocol.LHProtos.OwnerData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public lighthouse.protocol.LHProtos.OwnerData buildPartial() {
        lighthouse.protocol.LHProtos.OwnerData result = new lighthouse.protocol.LHProtos.OwnerData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.authKeyIndex_ = authKeyIndex_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof lighthouse.protocol.LHProtos.OwnerData) {
          return mergeFrom((lighthouse.protocol.LHProtos.OwnerData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(lighthouse.protocol.LHProtos.OwnerData other) {
        if (other == lighthouse.protocol.LHProtos.OwnerData.getDefaultInstance()) return this;
        if (other.hasAuthKeyIndex()) {
          setAuthKeyIndex(other.getAuthKeyIndex());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        lighthouse.protocol.LHProtos.OwnerData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (lighthouse.protocol.LHProtos.OwnerData) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional uint32 auth_key_index = 1;
      private int authKeyIndex_ ;
      /**
       * <code>optional uint32 auth_key_index = 1;</code>
       *
       * <pre>
       * If auth_key might not be easily located by the project owner because it's beyond the lookahead zone that's
       * pre-calculated when a wallet is restored from seed words, we stash the index here. It results in a minor
       * privacy leak: for people who created bajillions of projects out of the same wallet it leaks how many they've
       * created so far. However it means people can restore ownership of a project from the same file they made public
       * and the seed words, making it more robust against data loss. For most users who don't create many projects it
       * will be missing and thus not pose any privacy issues.
       * </pre>
       */
      public boolean hasAuthKeyIndex() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 auth_key_index = 1;</code>
       *
       * <pre>
       * If auth_key might not be easily located by the project owner because it's beyond the lookahead zone that's
       * pre-calculated when a wallet is restored from seed words, we stash the index here. It results in a minor
       * privacy leak: for people who created bajillions of projects out of the same wallet it leaks how many they've
       * created so far. However it means people can restore ownership of a project from the same file they made public
       * and the seed words, making it more robust against data loss. For most users who don't create many projects it
       * will be missing and thus not pose any privacy issues.
       * </pre>
       */
      public int getAuthKeyIndex() {
        return authKeyIndex_;
      }
      /**
       * <code>optional uint32 auth_key_index = 1;</code>
       *
       * <pre>
       * If auth_key might not be easily located by the project owner because it's beyond the lookahead zone that's
       * pre-calculated when a wallet is restored from seed words, we stash the index here. It results in a minor
       * privacy leak: for people who created bajillions of projects out of the same wallet it leaks how many they've
       * created so far. However it means people can restore ownership of a project from the same file they made public
       * and the seed words, making it more robust against data loss. For most users who don't create many projects it
       * will be missing and thus not pose any privacy issues.
       * </pre>
       */
      public Builder setAuthKeyIndex(int value) {
        bitField0_ |= 0x00000001;
        authKeyIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 auth_key_index = 1;</code>
       *
       * <pre>
       * If auth_key might not be easily located by the project owner because it's beyond the lookahead zone that's
       * pre-calculated when a wallet is restored from seed words, we stash the index here. It results in a minor
       * privacy leak: for people who created bajillions of projects out of the same wallet it leaks how many they've
       * created so far. However it means people can restore ownership of a project from the same file they made public
       * and the seed words, making it more robust against data loss. For most users who don't create many projects it
       * will be missing and thus not pose any privacy issues.
       * </pre>
       */
      public Builder clearAuthKeyIndex() {
        bitField0_ = (bitField0_ & ~0x00000001);
        authKeyIndex_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:lighthouse.OwnerData)
    }

    static {
      defaultInstance = new OwnerData(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:lighthouse.OwnerData)
  }

  public interface ProjectDetailsOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string network = 1 [default = "main"];
    /**
     * <code>optional string network = 1 [default = "main"];</code>
     *
     * <pre>
     * "main" or "test"
     * </pre>
     */
    boolean hasNetwork();
    /**
     * <code>optional string network = 1 [default = "main"];</code>
     *
     * <pre>
     * "main" or "test"
     * </pre>
     */
    java.lang.String getNetwork();
    /**
     * <code>optional string network = 1 [default = "main"];</code>
     *
     * <pre>
     * "main" or "test"
     * </pre>
     */
    com.google.protobuf.ByteString
        getNetworkBytes();

    // repeated .lighthouse.Output outputs = 2;
    /**
     * <code>repeated .lighthouse.Output outputs = 2;</code>
     *
     * <pre>
     * Where payment should be sent
     * </pre>
     */
    java.util.List<lighthouse.protocol.LHProtos.Output> 
        getOutputsList();
    /**
     * <code>repeated .lighthouse.Output outputs = 2;</code>
     *
     * <pre>
     * Where payment should be sent
     * </pre>
     */
    lighthouse.protocol.LHProtos.Output getOutputs(int index);
    /**
     * <code>repeated .lighthouse.Output outputs = 2;</code>
     *
     * <pre>
     * Where payment should be sent
     * </pre>
     */
    int getOutputsCount();
    /**
     * <code>repeated .lighthouse.Output outputs = 2;</code>
     *
     * <pre>
     * Where payment should be sent
     * </pre>
     */
    java.util.List<? extends lighthouse.protocol.LHProtos.OutputOrBuilder> 
        getOutputsOrBuilderList();
    /**
     * <code>repeated .lighthouse.Output outputs = 2;</code>
     *
     * <pre>
     * Where payment should be sent
     * </pre>
     */
    lighthouse.protocol.LHProtos.OutputOrBuilder getOutputsOrBuilder(
        int index);

    // required uint64 time = 3;
    /**
     * <code>required uint64 time = 3;</code>
     *
     * <pre>
     * Timestamp; when payment request created
     * </pre>
     */
    boolean hasTime();
    /**
     * <code>required uint64 time = 3;</code>
     *
     * <pre>
     * Timestamp; when payment request created
     * </pre>
     */
    long getTime();

    // optional uint64 expires = 4;
    /**
     * <code>optional uint64 expires = 4;</code>
     *
     * <pre>
     * Timestamp; when this request should be considered invalid in seconds since the epoch
     * </pre>
     */
    boolean hasExpires();
    /**
     * <code>optional uint64 expires = 4;</code>
     *
     * <pre>
     * Timestamp; when this request should be considered invalid in seconds since the epoch
     * </pre>
     */
    long getExpires();

    // optional string memo = 5;
    /**
     * <code>optional string memo = 5;</code>
     *
     * <pre>
     * Human-readable description of request for the customer
     * </pre>
     */
    boolean hasMemo();
    /**
     * <code>optional string memo = 5;</code>
     *
     * <pre>
     * Human-readable description of request for the customer
     * </pre>
     */
    java.lang.String getMemo();
    /**
     * <code>optional string memo = 5;</code>
     *
     * <pre>
     * Human-readable description of request for the customer
     * </pre>
     */
    com.google.protobuf.ByteString
        getMemoBytes();

    // optional string payment_url = 6;
    /**
     * <code>optional string payment_url = 6;</code>
     *
     * <pre>
     * URL to send Pledge and get PaymentACK
     * </pre>
     */
    boolean hasPaymentUrl();
    /**
     * <code>optional string payment_url = 6;</code>
     *
     * <pre>
     * URL to send Pledge and get PaymentACK
     * </pre>
     */
    java.lang.String getPaymentUrl();
    /**
     * <code>optional string payment_url = 6;</code>
     *
     * <pre>
     * URL to send Pledge and get PaymentACK
     * </pre>
     */
    com.google.protobuf.ByteString
        getPaymentUrlBytes();

    // optional bytes merchant_data = 7;
    /**
     * <code>optional bytes merchant_data = 7;</code>
     *
     * <pre>
     * If present, serialized OwnerData.
     * </pre>
     */
    boolean hasMerchantData();
    /**
     * <code>optional bytes merchant_data = 7;</code>
     *
     * <pre>
     * If present, serialized OwnerData.
     * </pre>
     */
    com.google.protobuf.ByteString getMerchantData();

    // required .lighthouse.ProjectExtraDetails extra_details = 101;
    /**
     * <code>required .lighthouse.ProjectExtraDetails extra_details = 101;</code>
     */
    boolean hasExtraDetails();
    /**
     * <code>required .lighthouse.ProjectExtraDetails extra_details = 101;</code>
     */
    lighthouse.protocol.LHProtos.ProjectExtraDetails getExtraDetails();
    /**
     * <code>required .lighthouse.ProjectExtraDetails extra_details = 101;</code>
     */
    lighthouse.protocol.LHProtos.ProjectExtraDetailsOrBuilder getExtraDetailsOrBuilder();
  }
  /**
   * Protobuf type {@code lighthouse.ProjectDetails}
   */
  public static final class ProjectDetails extends
      com.google.protobuf.GeneratedMessage
      implements ProjectDetailsOrBuilder {
    // Use ProjectDetails.newBuilder() to construct.
    private ProjectDetails(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ProjectDetails(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ProjectDetails defaultInstance;
    public static ProjectDetails getDefaultInstance() {
      return defaultInstance;
    }

    public ProjectDetails getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ProjectDetails(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              network_ = input.readBytes();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                outputs_ = new java.util.ArrayList<lighthouse.protocol.LHProtos.Output>();
                mutable_bitField0_ |= 0x00000002;
              }
              outputs_.add(input.readMessage(lighthouse.protocol.LHProtos.Output.PARSER, extensionRegistry));
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              time_ = input.readUInt64();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              expires_ = input.readUInt64();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000008;
              memo_ = input.readBytes();
              break;
            }
            case 50: {
              bitField0_ |= 0x00000010;
              paymentUrl_ = input.readBytes();
              break;
            }
            case 58: {
              bitField0_ |= 0x00000020;
              merchantData_ = input.readBytes();
              break;
            }
            case 810: {
              lighthouse.protocol.LHProtos.ProjectExtraDetails.Builder subBuilder = null;
              if (((bitField0_ & 0x00000040) == 0x00000040)) {
                subBuilder = extraDetails_.toBuilder();
              }
              extraDetails_ = input.readMessage(lighthouse.protocol.LHProtos.ProjectExtraDetails.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(extraDetails_);
                extraDetails_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000040;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          outputs_ = java.util.Collections.unmodifiableList(outputs_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return lighthouse.protocol.LHProtos.internal_static_lighthouse_ProjectDetails_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return lighthouse.protocol.LHProtos.internal_static_lighthouse_ProjectDetails_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              lighthouse.protocol.LHProtos.ProjectDetails.class, lighthouse.protocol.LHProtos.ProjectDetails.Builder.class);
    }

    public static com.google.protobuf.Parser<ProjectDetails> PARSER =
        new com.google.protobuf.AbstractParser<ProjectDetails>() {
      public ProjectDetails parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ProjectDetails(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ProjectDetails> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string network = 1 [default = "main"];
    public static final int NETWORK_FIELD_NUMBER = 1;
    private java.lang.Object network_;
    /**
     * <code>optional string network = 1 [default = "main"];</code>
     *
     * <pre>
     * "main" or "test"
     * </pre>
     */
    public boolean hasNetwork() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string network = 1 [default = "main"];</code>
     *
     * <pre>
     * "main" or "test"
     * </pre>
     */
    public java.lang.String getNetwork() {
      java.lang.Object ref = network_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          network_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string network = 1 [default = "main"];</code>
     *
     * <pre>
     * "main" or "test"
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNetworkBytes() {
      java.lang.Object ref = network_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        network_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated .lighthouse.Output outputs = 2;
    public static final int OUTPUTS_FIELD_NUMBER = 2;
    private java.util.List<lighthouse.protocol.LHProtos.Output> outputs_;
    /**
     * <code>repeated .lighthouse.Output outputs = 2;</code>
     *
     * <pre>
     * Where payment should be sent
     * </pre>
     */
    public java.util.List<lighthouse.protocol.LHProtos.Output> getOutputsList() {
      return outputs_;
    }
    /**
     * <code>repeated .lighthouse.Output outputs = 2;</code>
     *
     * <pre>
     * Where payment should be sent
     * </pre>
     */
    public java.util.List<? extends lighthouse.protocol.LHProtos.OutputOrBuilder> 
        getOutputsOrBuilderList() {
      return outputs_;
    }
    /**
     * <code>repeated .lighthouse.Output outputs = 2;</code>
     *
     * <pre>
     * Where payment should be sent
     * </pre>
     */
    public int getOutputsCount() {
      return outputs_.size();
    }
    /**
     * <code>repeated .lighthouse.Output outputs = 2;</code>
     *
     * <pre>
     * Where payment should be sent
     * </pre>
     */
    public lighthouse.protocol.LHProtos.Output getOutputs(int index) {
      return outputs_.get(index);
    }
    /**
     * <code>repeated .lighthouse.Output outputs = 2;</code>
     *
     * <pre>
     * Where payment should be sent
     * </pre>
     */
    public lighthouse.protocol.LHProtos.OutputOrBuilder getOutputsOrBuilder(
        int index) {
      return outputs_.get(index);
    }

    // required uint64 time = 3;
    public static final int TIME_FIELD_NUMBER = 3;
    private long time_;
    /**
     * <code>required uint64 time = 3;</code>
     *
     * <pre>
     * Timestamp; when payment request created
     * </pre>
     */
    public boolean hasTime() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint64 time = 3;</code>
     *
     * <pre>
     * Timestamp; when payment request created
     * </pre>
     */
    public long getTime() {
      return time_;
    }

    // optional uint64 expires = 4;
    public static final int EXPIRES_FIELD_NUMBER = 4;
    private long expires_;
    /**
     * <code>optional uint64 expires = 4;</code>
     *
     * <pre>
     * Timestamp; when this request should be considered invalid in seconds since the epoch
     * </pre>
     */
    public boolean hasExpires() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint64 expires = 4;</code>
     *
     * <pre>
     * Timestamp; when this request should be considered invalid in seconds since the epoch
     * </pre>
     */
    public long getExpires() {
      return expires_;
    }

    // optional string memo = 5;
    public static final int MEMO_FIELD_NUMBER = 5;
    private java.lang.Object memo_;
    /**
     * <code>optional string memo = 5;</code>
     *
     * <pre>
     * Human-readable description of request for the customer
     * </pre>
     */
    public boolean hasMemo() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string memo = 5;</code>
     *
     * <pre>
     * Human-readable description of request for the customer
     * </pre>
     */
    public java.lang.String getMemo() {
      java.lang.Object ref = memo_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          memo_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string memo = 5;</code>
     *
     * <pre>
     * Human-readable description of request for the customer
     * </pre>
     */
    public com.google.protobuf.ByteString
        getMemoBytes() {
      java.lang.Object ref = memo_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        memo_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string payment_url = 6;
    public static final int PAYMENT_URL_FIELD_NUMBER = 6;
    private java.lang.Object paymentUrl_;
    /**
     * <code>optional string payment_url = 6;</code>
     *
     * <pre>
     * URL to send Pledge and get PaymentACK
     * </pre>
     */
    public boolean hasPaymentUrl() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string payment_url = 6;</code>
     *
     * <pre>
     * URL to send Pledge and get PaymentACK
     * </pre>
     */
    public java.lang.String getPaymentUrl() {
      java.lang.Object ref = paymentUrl_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          paymentUrl_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string payment_url = 6;</code>
     *
     * <pre>
     * URL to send Pledge and get PaymentACK
     * </pre>
     */
    public com.google.protobuf.ByteString
        getPaymentUrlBytes() {
      java.lang.Object ref = paymentUrl_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        paymentUrl_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional bytes merchant_data = 7;
    public static final int MERCHANT_DATA_FIELD_NUMBER = 7;
    private com.google.protobuf.ByteString merchantData_;
    /**
     * <code>optional bytes merchant_data = 7;</code>
     *
     * <pre>
     * If present, serialized OwnerData.
     * </pre>
     */
    public boolean hasMerchantData() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional bytes merchant_data = 7;</code>
     *
     * <pre>
     * If present, serialized OwnerData.
     * </pre>
     */
    public com.google.protobuf.ByteString getMerchantData() {
      return merchantData_;
    }

    // required .lighthouse.ProjectExtraDetails extra_details = 101;
    public static final int EXTRA_DETAILS_FIELD_NUMBER = 101;
    private lighthouse.protocol.LHProtos.ProjectExtraDetails extraDetails_;
    /**
     * <code>required .lighthouse.ProjectExtraDetails extra_details = 101;</code>
     */
    public boolean hasExtraDetails() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required .lighthouse.ProjectExtraDetails extra_details = 101;</code>
     */
    public lighthouse.protocol.LHProtos.ProjectExtraDetails getExtraDetails() {
      return extraDetails_;
    }
    /**
     * <code>required .lighthouse.ProjectExtraDetails extra_details = 101;</code>
     */
    public lighthouse.protocol.LHProtos.ProjectExtraDetailsOrBuilder getExtraDetailsOrBuilder() {
      return extraDetails_;
    }

    private void initFields() {
      network_ = "main";
      outputs_ = java.util.Collections.emptyList();
      time_ = 0L;
      expires_ = 0L;
      memo_ = "";
      paymentUrl_ = "";
      merchantData_ = com.google.protobuf.ByteString.EMPTY;
      extraDetails_ = lighthouse.protocol.LHProtos.ProjectExtraDetails.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasExtraDetails()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getOutputsCount(); i++) {
        if (!getOutputs(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (!getExtraDetails().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getNetworkBytes());
      }
      for (int i = 0; i < outputs_.size(); i++) {
        output.writeMessage(2, outputs_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(3, time_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt64(4, expires_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(5, getMemoBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(6, getPaymentUrlBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(7, merchantData_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(101, extraDetails_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getNetworkBytes());
      }
      for (int i = 0; i < outputs_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, outputs_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, time_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, expires_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getMemoBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getPaymentUrlBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, merchantData_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(101, extraDetails_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static lighthouse.protocol.LHProtos.ProjectDetails parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static lighthouse.protocol.LHProtos.ProjectDetails parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static lighthouse.protocol.LHProtos.ProjectDetails parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static lighthouse.protocol.LHProtos.ProjectDetails parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static lighthouse.protocol.LHProtos.ProjectDetails parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static lighthouse.protocol.LHProtos.ProjectDetails parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static lighthouse.protocol.LHProtos.ProjectDetails parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static lighthouse.protocol.LHProtos.ProjectDetails parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static lighthouse.protocol.LHProtos.ProjectDetails parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static lighthouse.protocol.LHProtos.ProjectDetails parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(lighthouse.protocol.LHProtos.ProjectDetails prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code lighthouse.ProjectDetails}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements lighthouse.protocol.LHProtos.ProjectDetailsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return lighthouse.protocol.LHProtos.internal_static_lighthouse_ProjectDetails_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return lighthouse.protocol.LHProtos.internal_static_lighthouse_ProjectDetails_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                lighthouse.protocol.LHProtos.ProjectDetails.class, lighthouse.protocol.LHProtos.ProjectDetails.Builder.class);
      }

      // Construct using lighthouse.protocol.LHProtos.ProjectDetails.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getOutputsFieldBuilder();
          getExtraDetailsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        network_ = "main";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (outputsBuilder_ == null) {
          outputs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          outputsBuilder_.clear();
        }
        time_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        expires_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        memo_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        paymentUrl_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        merchantData_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000040);
        if (extraDetailsBuilder_ == null) {
          extraDetails_ = lighthouse.protocol.LHProtos.ProjectExtraDetails.getDefaultInstance();
        } else {
          extraDetailsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return lighthouse.protocol.LHProtos.internal_static_lighthouse_ProjectDetails_descriptor;
      }

      public lighthouse.protocol.LHProtos.ProjectDetails getDefaultInstanceForType() {
        return lighthouse.protocol.LHProtos.ProjectDetails.getDefaultInstance();
      }

      public lighthouse.protocol.LHProtos.ProjectDetails build() {
        lighthouse.protocol.LHProtos.ProjectDetails result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public lighthouse.protocol.LHProtos.ProjectDetails buildPartial() {
        lighthouse.protocol.LHProtos.ProjectDetails result = new lighthouse.protocol.LHProtos.ProjectDetails(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.network_ = network_;
        if (outputsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            outputs_ = java.util.Collections.unmodifiableList(outputs_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.outputs_ = outputs_;
        } else {
          result.outputs_ = outputsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.time_ = time_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.expires_ = expires_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.memo_ = memo_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.paymentUrl_ = paymentUrl_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        result.merchantData_ = merchantData_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        if (extraDetailsBuilder_ == null) {
          result.extraDetails_ = extraDetails_;
        } else {
          result.extraDetails_ = extraDetailsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof lighthouse.protocol.LHProtos.ProjectDetails) {
          return mergeFrom((lighthouse.protocol.LHProtos.ProjectDetails)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(lighthouse.protocol.LHProtos.ProjectDetails other) {
        if (other == lighthouse.protocol.LHProtos.ProjectDetails.getDefaultInstance()) return this;
        if (other.hasNetwork()) {
          bitField0_ |= 0x00000001;
          network_ = other.network_;
          onChanged();
        }
        if (outputsBuilder_ == null) {
          if (!other.outputs_.isEmpty()) {
            if (outputs_.isEmpty()) {
              outputs_ = other.outputs_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureOutputsIsMutable();
              outputs_.addAll(other.outputs_);
            }
            onChanged();
          }
        } else {
          if (!other.outputs_.isEmpty()) {
            if (outputsBuilder_.isEmpty()) {
              outputsBuilder_.dispose();
              outputsBuilder_ = null;
              outputs_ = other.outputs_;
              bitField0_ = (bitField0_ & ~0x00000002);
              outputsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getOutputsFieldBuilder() : null;
            } else {
              outputsBuilder_.addAllMessages(other.outputs_);
            }
          }
        }
        if (other.hasTime()) {
          setTime(other.getTime());
        }
        if (other.hasExpires()) {
          setExpires(other.getExpires());
        }
        if (other.hasMemo()) {
          bitField0_ |= 0x00000010;
          memo_ = other.memo_;
          onChanged();
        }
        if (other.hasPaymentUrl()) {
          bitField0_ |= 0x00000020;
          paymentUrl_ = other.paymentUrl_;
          onChanged();
        }
        if (other.hasMerchantData()) {
          setMerchantData(other.getMerchantData());
        }
        if (other.hasExtraDetails()) {
          mergeExtraDetails(other.getExtraDetails());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTime()) {
          
          return false;
        }
        if (!hasExtraDetails()) {
          
          return false;
        }
        for (int i = 0; i < getOutputsCount(); i++) {
          if (!getOutputs(i).isInitialized()) {
            
            return false;
          }
        }
        if (!getExtraDetails().isInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        lighthouse.protocol.LHProtos.ProjectDetails parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (lighthouse.protocol.LHProtos.ProjectDetails) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string network = 1 [default = "main"];
      private java.lang.Object network_ = "main";
      /**
       * <code>optional string network = 1 [default = "main"];</code>
       *
       * <pre>
       * "main" or "test"
       * </pre>
       */
      public boolean hasNetwork() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string network = 1 [default = "main"];</code>
       *
       * <pre>
       * "main" or "test"
       * </pre>
       */
      public java.lang.String getNetwork() {
        java.lang.Object ref = network_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          network_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string network = 1 [default = "main"];</code>
       *
       * <pre>
       * "main" or "test"
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNetworkBytes() {
        java.lang.Object ref = network_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          network_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string network = 1 [default = "main"];</code>
       *
       * <pre>
       * "main" or "test"
       * </pre>
       */
      public Builder setNetwork(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        network_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string network = 1 [default = "main"];</code>
       *
       * <pre>
       * "main" or "test"
       * </pre>
       */
      public Builder clearNetwork() {
        bitField0_ = (bitField0_ & ~0x00000001);
        network_ = getDefaultInstance().getNetwork();
        onChanged();
        return this;
      }
      /**
       * <code>optional string network = 1 [default = "main"];</code>
       *
       * <pre>
       * "main" or "test"
       * </pre>
       */
      public Builder setNetworkBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        network_ = value;
        onChanged();
        return this;
      }

      // repeated .lighthouse.Output outputs = 2;
      private java.util.List<lighthouse.protocol.LHProtos.Output> outputs_ =
        java.util.Collections.emptyList();
      private void ensureOutputsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          outputs_ = new java.util.ArrayList<lighthouse.protocol.LHProtos.Output>(outputs_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          lighthouse.protocol.LHProtos.Output, lighthouse.protocol.LHProtos.Output.Builder, lighthouse.protocol.LHProtos.OutputOrBuilder> outputsBuilder_;

      /**
       * <code>repeated .lighthouse.Output outputs = 2;</code>
       *
       * <pre>
       * Where payment should be sent
       * </pre>
       */
      public java.util.List<lighthouse.protocol.LHProtos.Output> getOutputsList() {
        if (outputsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(outputs_);
        } else {
          return outputsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .lighthouse.Output outputs = 2;</code>
       *
       * <pre>
       * Where payment should be sent
       * </pre>
       */
      public int getOutputsCount() {
        if (outputsBuilder_ == null) {
          return outputs_.size();
        } else {
          return outputsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .lighthouse.Output outputs = 2;</code>
       *
       * <pre>
       * Where payment should be sent
       * </pre>
       */
      public lighthouse.protocol.LHProtos.Output getOutputs(int index) {
        if (outputsBuilder_ == null) {
          return outputs_.get(index);
        } else {
          return outputsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .lighthouse.Output outputs = 2;</code>
       *
       * <pre>
       * Where payment should be sent
       * </pre>
       */
      public Builder setOutputs(
          int index, lighthouse.protocol.LHProtos.Output value) {
        if (outputsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOutputsIsMutable();
          outputs_.set(index, value);
          onChanged();
        } else {
          outputsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .lighthouse.Output outputs = 2;</code>
       *
       * <pre>
       * Where payment should be sent
       * </pre>
       */
      public Builder setOutputs(
          int index, lighthouse.protocol.LHProtos.Output.Builder builderForValue) {
        if (outputsBuilder_ == null) {
          ensureOutputsIsMutable();
          outputs_.set(index, builderForValue.build());
          onChanged();
        } else {
          outputsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .lighthouse.Output outputs = 2;</code>
       *
       * <pre>
       * Where payment should be sent
       * </pre>
       */
      public Builder addOutputs(lighthouse.protocol.LHProtos.Output value) {
        if (outputsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOutputsIsMutable();
          outputs_.add(value);
          onChanged();
        } else {
          outputsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .lighthouse.Output outputs = 2;</code>
       *
       * <pre>
       * Where payment should be sent
       * </pre>
       */
      public Builder addOutputs(
          int index, lighthouse.protocol.LHProtos.Output value) {
        if (outputsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOutputsIsMutable();
          outputs_.add(index, value);
          onChanged();
        } else {
          outputsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .lighthouse.Output outputs = 2;</code>
       *
       * <pre>
       * Where payment should be sent
       * </pre>
       */
      public Builder addOutputs(
          lighthouse.protocol.LHProtos.Output.Builder builderForValue) {
        if (outputsBuilder_ == null) {
          ensureOutputsIsMutable();
          outputs_.add(builderForValue.build());
          onChanged();
        } else {
          outputsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .lighthouse.Output outputs = 2;</code>
       *
       * <pre>
       * Where payment should be sent
       * </pre>
       */
      public Builder addOutputs(
          int index, lighthouse.protocol.LHProtos.Output.Builder builderForValue) {
        if (outputsBuilder_ == null) {
          ensureOutputsIsMutable();
          outputs_.add(index, builderForValue.build());
          onChanged();
        } else {
          outputsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .lighthouse.Output outputs = 2;</code>
       *
       * <pre>
       * Where payment should be sent
       * </pre>
       */
      public Builder addAllOutputs(
          java.lang.Iterable<? extends lighthouse.protocol.LHProtos.Output> values) {
        if (outputsBuilder_ == null) {
          ensureOutputsIsMutable();
          super.addAll(values, outputs_);
          onChanged();
        } else {
          outputsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .lighthouse.Output outputs = 2;</code>
       *
       * <pre>
       * Where payment should be sent
       * </pre>
       */
      public Builder clearOutputs() {
        if (outputsBuilder_ == null) {
          outputs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          outputsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .lighthouse.Output outputs = 2;</code>
       *
       * <pre>
       * Where payment should be sent
       * </pre>
       */
      public Builder removeOutputs(int index) {
        if (outputsBuilder_ == null) {
          ensureOutputsIsMutable();
          outputs_.remove(index);
          onChanged();
        } else {
          outputsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .lighthouse.Output outputs = 2;</code>
       *
       * <pre>
       * Where payment should be sent
       * </pre>
       */
      public lighthouse.protocol.LHProtos.Output.Builder getOutputsBuilder(
          int index) {
        return getOutputsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .lighthouse.Output outputs = 2;</code>
       *
       * <pre>
       * Where payment should be sent
       * </pre>
       */
      public lighthouse.protocol.LHProtos.OutputOrBuilder getOutputsOrBuilder(
          int index) {
        if (outputsBuilder_ == null) {
          return outputs_.get(index);  } else {
          return outputsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .lighthouse.Output outputs = 2;</code>
       *
       * <pre>
       * Where payment should be sent
       * </pre>
       */
      public java.util.List<? extends lighthouse.protocol.LHProtos.OutputOrBuilder> 
           getOutputsOrBuilderList() {
        if (outputsBuilder_ != null) {
          return outputsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(outputs_);
        }
      }
      /**
       * <code>repeated .lighthouse.Output outputs = 2;</code>
       *
       * <pre>
       * Where payment should be sent
       * </pre>
       */
      public lighthouse.protocol.LHProtos.Output.Builder addOutputsBuilder() {
        return getOutputsFieldBuilder().addBuilder(
            lighthouse.protocol.LHProtos.Output.getDefaultInstance());
      }
      /**
       * <code>repeated .lighthouse.Output outputs = 2;</code>
       *
       * <pre>
       * Where payment should be sent
       * </pre>
       */
      public lighthouse.protocol.LHProtos.Output.Builder addOutputsBuilder(
          int index) {
        return getOutputsFieldBuilder().addBuilder(
            index, lighthouse.protocol.LHProtos.Output.getDefaultInstance());
      }
      /**
       * <code>repeated .lighthouse.Output outputs = 2;</code>
       *
       * <pre>
       * Where payment should be sent
       * </pre>
       */
      public java.util.List<lighthouse.protocol.LHProtos.Output.Builder> 
           getOutputsBuilderList() {
        return getOutputsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          lighthouse.protocol.LHProtos.Output, lighthouse.protocol.LHProtos.Output.Builder, lighthouse.protocol.LHProtos.OutputOrBuilder> 
          getOutputsFieldBuilder() {
        if (outputsBuilder_ == null) {
          outputsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              lighthouse.protocol.LHProtos.Output, lighthouse.protocol.LHProtos.Output.Builder, lighthouse.protocol.LHProtos.OutputOrBuilder>(
                  outputs_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          outputs_ = null;
        }
        return outputsBuilder_;
      }

      // required uint64 time = 3;
      private long time_ ;
      /**
       * <code>required uint64 time = 3;</code>
       *
       * <pre>
       * Timestamp; when payment request created
       * </pre>
       */
      public boolean hasTime() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required uint64 time = 3;</code>
       *
       * <pre>
       * Timestamp; when payment request created
       * </pre>
       */
      public long getTime() {
        return time_;
      }
      /**
       * <code>required uint64 time = 3;</code>
       *
       * <pre>
       * Timestamp; when payment request created
       * </pre>
       */
      public Builder setTime(long value) {
        bitField0_ |= 0x00000004;
        time_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 time = 3;</code>
       *
       * <pre>
       * Timestamp; when payment request created
       * </pre>
       */
      public Builder clearTime() {
        bitField0_ = (bitField0_ & ~0x00000004);
        time_ = 0L;
        onChanged();
        return this;
      }

      // optional uint64 expires = 4;
      private long expires_ ;
      /**
       * <code>optional uint64 expires = 4;</code>
       *
       * <pre>
       * Timestamp; when this request should be considered invalid in seconds since the epoch
       * </pre>
       */
      public boolean hasExpires() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint64 expires = 4;</code>
       *
       * <pre>
       * Timestamp; when this request should be considered invalid in seconds since the epoch
       * </pre>
       */
      public long getExpires() {
        return expires_;
      }
      /**
       * <code>optional uint64 expires = 4;</code>
       *
       * <pre>
       * Timestamp; when this request should be considered invalid in seconds since the epoch
       * </pre>
       */
      public Builder setExpires(long value) {
        bitField0_ |= 0x00000008;
        expires_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 expires = 4;</code>
       *
       * <pre>
       * Timestamp; when this request should be considered invalid in seconds since the epoch
       * </pre>
       */
      public Builder clearExpires() {
        bitField0_ = (bitField0_ & ~0x00000008);
        expires_ = 0L;
        onChanged();
        return this;
      }

      // optional string memo = 5;
      private java.lang.Object memo_ = "";
      /**
       * <code>optional string memo = 5;</code>
       *
       * <pre>
       * Human-readable description of request for the customer
       * </pre>
       */
      public boolean hasMemo() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string memo = 5;</code>
       *
       * <pre>
       * Human-readable description of request for the customer
       * </pre>
       */
      public java.lang.String getMemo() {
        java.lang.Object ref = memo_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          memo_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string memo = 5;</code>
       *
       * <pre>
       * Human-readable description of request for the customer
       * </pre>
       */
      public com.google.protobuf.ByteString
          getMemoBytes() {
        java.lang.Object ref = memo_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          memo_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string memo = 5;</code>
       *
       * <pre>
       * Human-readable description of request for the customer
       * </pre>
       */
      public Builder setMemo(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        memo_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string memo = 5;</code>
       *
       * <pre>
       * Human-readable description of request for the customer
       * </pre>
       */
      public Builder clearMemo() {
        bitField0_ = (bitField0_ & ~0x00000010);
        memo_ = getDefaultInstance().getMemo();
        onChanged();
        return this;
      }
      /**
       * <code>optional string memo = 5;</code>
       *
       * <pre>
       * Human-readable description of request for the customer
       * </pre>
       */
      public Builder setMemoBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        memo_ = value;
        onChanged();
        return this;
      }

      // optional string payment_url = 6;
      private java.lang.Object paymentUrl_ = "";
      /**
       * <code>optional string payment_url = 6;</code>
       *
       * <pre>
       * URL to send Pledge and get PaymentACK
       * </pre>
       */
      public boolean hasPaymentUrl() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional string payment_url = 6;</code>
       *
       * <pre>
       * URL to send Pledge and get PaymentACK
       * </pre>
       */
      public java.lang.String getPaymentUrl() {
        java.lang.Object ref = paymentUrl_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          paymentUrl_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string payment_url = 6;</code>
       *
       * <pre>
       * URL to send Pledge and get PaymentACK
       * </pre>
       */
      public com.google.protobuf.ByteString
          getPaymentUrlBytes() {
        java.lang.Object ref = paymentUrl_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          paymentUrl_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string payment_url = 6;</code>
       *
       * <pre>
       * URL to send Pledge and get PaymentACK
       * </pre>
       */
      public Builder setPaymentUrl(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        paymentUrl_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string payment_url = 6;</code>
       *
       * <pre>
       * URL to send Pledge and get PaymentACK
       * </pre>
       */
      public Builder clearPaymentUrl() {
        bitField0_ = (bitField0_ & ~0x00000020);
        paymentUrl_ = getDefaultInstance().getPaymentUrl();
        onChanged();
        return this;
      }
      /**
       * <code>optional string payment_url = 6;</code>
       *
       * <pre>
       * URL to send Pledge and get PaymentACK
       * </pre>
       */
      public Builder setPaymentUrlBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        paymentUrl_ = value;
        onChanged();
        return this;
      }

      // optional bytes merchant_data = 7;
      private com.google.protobuf.ByteString merchantData_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes merchant_data = 7;</code>
       *
       * <pre>
       * If present, serialized OwnerData.
       * </pre>
       */
      public boolean hasMerchantData() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional bytes merchant_data = 7;</code>
       *
       * <pre>
       * If present, serialized OwnerData.
       * </pre>
       */
      public com.google.protobuf.ByteString getMerchantData() {
        return merchantData_;
      }
      /**
       * <code>optional bytes merchant_data = 7;</code>
       *
       * <pre>
       * If present, serialized OwnerData.
       * </pre>
       */
      public Builder setMerchantData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        merchantData_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes merchant_data = 7;</code>
       *
       * <pre>
       * If present, serialized OwnerData.
       * </pre>
       */
      public Builder clearMerchantData() {
        bitField0_ = (bitField0_ & ~0x00000040);
        merchantData_ = getDefaultInstance().getMerchantData();
        onChanged();
        return this;
      }

      // required .lighthouse.ProjectExtraDetails extra_details = 101;
      private lighthouse.protocol.LHProtos.ProjectExtraDetails extraDetails_ = lighthouse.protocol.LHProtos.ProjectExtraDetails.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          lighthouse.protocol.LHProtos.ProjectExtraDetails, lighthouse.protocol.LHProtos.ProjectExtraDetails.Builder, lighthouse.protocol.LHProtos.ProjectExtraDetailsOrBuilder> extraDetailsBuilder_;
      /**
       * <code>required .lighthouse.ProjectExtraDetails extra_details = 101;</code>
       */
      public boolean hasExtraDetails() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>required .lighthouse.ProjectExtraDetails extra_details = 101;</code>
       */
      public lighthouse.protocol.LHProtos.ProjectExtraDetails getExtraDetails() {
        if (extraDetailsBuilder_ == null) {
          return extraDetails_;
        } else {
          return extraDetailsBuilder_.getMessage();
        }
      }
      /**
       * <code>required .lighthouse.ProjectExtraDetails extra_details = 101;</code>
       */
      public Builder setExtraDetails(lighthouse.protocol.LHProtos.ProjectExtraDetails value) {
        if (extraDetailsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          extraDetails_ = value;
          onChanged();
        } else {
          extraDetailsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>required .lighthouse.ProjectExtraDetails extra_details = 101;</code>
       */
      public Builder setExtraDetails(
          lighthouse.protocol.LHProtos.ProjectExtraDetails.Builder builderForValue) {
        if (extraDetailsBuilder_ == null) {
          extraDetails_ = builderForValue.build();
          onChanged();
        } else {
          extraDetailsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>required .lighthouse.ProjectExtraDetails extra_details = 101;</code>
       */
      public Builder mergeExtraDetails(lighthouse.protocol.LHProtos.ProjectExtraDetails value) {
        if (extraDetailsBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080) &&
              extraDetails_ != lighthouse.protocol.LHProtos.ProjectExtraDetails.getDefaultInstance()) {
            extraDetails_ =
              lighthouse.protocol.LHProtos.ProjectExtraDetails.newBuilder(extraDetails_).mergeFrom(value).buildPartial();
          } else {
            extraDetails_ = value;
          }
          onChanged();
        } else {
          extraDetailsBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>required .lighthouse.ProjectExtraDetails extra_details = 101;</code>
       */
      public Builder clearExtraDetails() {
        if (extraDetailsBuilder_ == null) {
          extraDetails_ = lighthouse.protocol.LHProtos.ProjectExtraDetails.getDefaultInstance();
          onChanged();
        } else {
          extraDetailsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      /**
       * <code>required .lighthouse.ProjectExtraDetails extra_details = 101;</code>
       */
      public lighthouse.protocol.LHProtos.ProjectExtraDetails.Builder getExtraDetailsBuilder() {
        bitField0_ |= 0x00000080;
        onChanged();
        return getExtraDetailsFieldBuilder().getBuilder();
      }
      /**
       * <code>required .lighthouse.ProjectExtraDetails extra_details = 101;</code>
       */
      public lighthouse.protocol.LHProtos.ProjectExtraDetailsOrBuilder getExtraDetailsOrBuilder() {
        if (extraDetailsBuilder_ != null) {
          return extraDetailsBuilder_.getMessageOrBuilder();
        } else {
          return extraDetails_;
        }
      }
      /**
       * <code>required .lighthouse.ProjectExtraDetails extra_details = 101;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          lighthouse.protocol.LHProtos.ProjectExtraDetails, lighthouse.protocol.LHProtos.ProjectExtraDetails.Builder, lighthouse.protocol.LHProtos.ProjectExtraDetailsOrBuilder> 
          getExtraDetailsFieldBuilder() {
        if (extraDetailsBuilder_ == null) {
          extraDetailsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              lighthouse.protocol.LHProtos.ProjectExtraDetails, lighthouse.protocol.LHProtos.ProjectExtraDetails.Builder, lighthouse.protocol.LHProtos.ProjectExtraDetailsOrBuilder>(
                  extraDetails_,
                  getParentForChildren(),
                  isClean());
          extraDetails_ = null;
        }
        return extraDetailsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:lighthouse.ProjectDetails)
    }

    static {
      defaultInstance = new ProjectDetails(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:lighthouse.ProjectDetails)
  }

  public interface ProjectOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 payment_details_version = 1 [default = 1];
    /**
     * <code>optional uint32 payment_details_version = 1 [default = 1];</code>
     */
    boolean hasPaymentDetailsVersion();
    /**
     * <code>optional uint32 payment_details_version = 1 [default = 1];</code>
     */
    int getPaymentDetailsVersion();

    // optional string pki_type = 2 [default = "none"];
    /**
     * <code>optional string pki_type = 2 [default = "none"];</code>
     *
     * <pre>
     * none / x509+sha256 / x509+sha1
     * </pre>
     */
    boolean hasPkiType();
    /**
     * <code>optional string pki_type = 2 [default = "none"];</code>
     *
     * <pre>
     * none / x509+sha256 / x509+sha1
     * </pre>
     */
    java.lang.String getPkiType();
    /**
     * <code>optional string pki_type = 2 [default = "none"];</code>
     *
     * <pre>
     * none / x509+sha256 / x509+sha1
     * </pre>
     */
    com.google.protobuf.ByteString
        getPkiTypeBytes();

    // optional bytes pki_data = 3;
    /**
     * <code>optional bytes pki_data = 3;</code>
     *
     * <pre>
     * depends on pki_type
     * </pre>
     */
    boolean hasPkiData();
    /**
     * <code>optional bytes pki_data = 3;</code>
     *
     * <pre>
     * depends on pki_type
     * </pre>
     */
    com.google.protobuf.ByteString getPkiData();

    // required bytes serialized_payment_details = 4;
    /**
     * <code>required bytes serialized_payment_details = 4;</code>
     *
     * <pre>
     * ProjectDetails
     * </pre>
     */
    boolean hasSerializedPaymentDetails();
    /**
     * <code>required bytes serialized_payment_details = 4;</code>
     *
     * <pre>
     * ProjectDetails
     * </pre>
     */
    com.google.protobuf.ByteString getSerializedPaymentDetails();

    // optional bytes signature = 5;
    /**
     * <code>optional bytes signature = 5;</code>
     *
     * <pre>
     * pki-dependent signature
     * </pre>
     */
    boolean hasSignature();
    /**
     * <code>optional bytes signature = 5;</code>
     *
     * <pre>
     * pki-dependent signature
     * </pre>
     */
    com.google.protobuf.ByteString getSignature();
  }
  /**
   * Protobuf type {@code lighthouse.Project}
   */
  public static final class Project extends
      com.google.protobuf.GeneratedMessage
      implements ProjectOrBuilder {
    // Use Project.newBuilder() to construct.
    private Project(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Project(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Project defaultInstance;
    public static Project getDefaultInstance() {
      return defaultInstance;
    }

    public Project getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Project(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              paymentDetailsVersion_ = input.readUInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              pkiType_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              pkiData_ = input.readBytes();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              serializedPaymentDetails_ = input.readBytes();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              signature_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return lighthouse.protocol.LHProtos.internal_static_lighthouse_Project_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return lighthouse.protocol.LHProtos.internal_static_lighthouse_Project_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              lighthouse.protocol.LHProtos.Project.class, lighthouse.protocol.LHProtos.Project.Builder.class);
    }

    public static com.google.protobuf.Parser<Project> PARSER =
        new com.google.protobuf.AbstractParser<Project>() {
      public Project parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Project(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Project> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 payment_details_version = 1 [default = 1];
    public static final int PAYMENT_DETAILS_VERSION_FIELD_NUMBER = 1;
    private int paymentDetailsVersion_;
    /**
     * <code>optional uint32 payment_details_version = 1 [default = 1];</code>
     */
    public boolean hasPaymentDetailsVersion() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 payment_details_version = 1 [default = 1];</code>
     */
    public int getPaymentDetailsVersion() {
      return paymentDetailsVersion_;
    }

    // optional string pki_type = 2 [default = "none"];
    public static final int PKI_TYPE_FIELD_NUMBER = 2;
    private java.lang.Object pkiType_;
    /**
     * <code>optional string pki_type = 2 [default = "none"];</code>
     *
     * <pre>
     * none / x509+sha256 / x509+sha1
     * </pre>
     */
    public boolean hasPkiType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string pki_type = 2 [default = "none"];</code>
     *
     * <pre>
     * none / x509+sha256 / x509+sha1
     * </pre>
     */
    public java.lang.String getPkiType() {
      java.lang.Object ref = pkiType_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          pkiType_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string pki_type = 2 [default = "none"];</code>
     *
     * <pre>
     * none / x509+sha256 / x509+sha1
     * </pre>
     */
    public com.google.protobuf.ByteString
        getPkiTypeBytes() {
      java.lang.Object ref = pkiType_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        pkiType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional bytes pki_data = 3;
    public static final int PKI_DATA_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString pkiData_;
    /**
     * <code>optional bytes pki_data = 3;</code>
     *
     * <pre>
     * depends on pki_type
     * </pre>
     */
    public boolean hasPkiData() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bytes pki_data = 3;</code>
     *
     * <pre>
     * depends on pki_type
     * </pre>
     */
    public com.google.protobuf.ByteString getPkiData() {
      return pkiData_;
    }

    // required bytes serialized_payment_details = 4;
    public static final int SERIALIZED_PAYMENT_DETAILS_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString serializedPaymentDetails_;
    /**
     * <code>required bytes serialized_payment_details = 4;</code>
     *
     * <pre>
     * ProjectDetails
     * </pre>
     */
    public boolean hasSerializedPaymentDetails() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required bytes serialized_payment_details = 4;</code>
     *
     * <pre>
     * ProjectDetails
     * </pre>
     */
    public com.google.protobuf.ByteString getSerializedPaymentDetails() {
      return serializedPaymentDetails_;
    }

    // optional bytes signature = 5;
    public static final int SIGNATURE_FIELD_NUMBER = 5;
    private com.google.protobuf.ByteString signature_;
    /**
     * <code>optional bytes signature = 5;</code>
     *
     * <pre>
     * pki-dependent signature
     * </pre>
     */
    public boolean hasSignature() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional bytes signature = 5;</code>
     *
     * <pre>
     * pki-dependent signature
     * </pre>
     */
    public com.google.protobuf.ByteString getSignature() {
      return signature_;
    }

    private void initFields() {
      paymentDetailsVersion_ = 1;
      pkiType_ = "none";
      pkiData_ = com.google.protobuf.ByteString.EMPTY;
      serializedPaymentDetails_ = com.google.protobuf.ByteString.EMPTY;
      signature_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasSerializedPaymentDetails()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, paymentDetailsVersion_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getPkiTypeBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, pkiData_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, serializedPaymentDetails_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, signature_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, paymentDetailsVersion_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getPkiTypeBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, pkiData_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, serializedPaymentDetails_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, signature_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static lighthouse.protocol.LHProtos.Project parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static lighthouse.protocol.LHProtos.Project parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static lighthouse.protocol.LHProtos.Project parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static lighthouse.protocol.LHProtos.Project parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static lighthouse.protocol.LHProtos.Project parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static lighthouse.protocol.LHProtos.Project parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static lighthouse.protocol.LHProtos.Project parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static lighthouse.protocol.LHProtos.Project parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static lighthouse.protocol.LHProtos.Project parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static lighthouse.protocol.LHProtos.Project parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(lighthouse.protocol.LHProtos.Project prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code lighthouse.Project}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements lighthouse.protocol.LHProtos.ProjectOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return lighthouse.protocol.LHProtos.internal_static_lighthouse_Project_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return lighthouse.protocol.LHProtos.internal_static_lighthouse_Project_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                lighthouse.protocol.LHProtos.Project.class, lighthouse.protocol.LHProtos.Project.Builder.class);
      }

      // Construct using lighthouse.protocol.LHProtos.Project.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        paymentDetailsVersion_ = 1;
        bitField0_ = (bitField0_ & ~0x00000001);
        pkiType_ = "none";
        bitField0_ = (bitField0_ & ~0x00000002);
        pkiData_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        serializedPaymentDetails_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        signature_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return lighthouse.protocol.LHProtos.internal_static_lighthouse_Project_descriptor;
      }

      public lighthouse.protocol.LHProtos.Project getDefaultInstanceForType() {
        return lighthouse.protocol.LHProtos.Project.getDefaultInstance();
      }

      public lighthouse.protocol.LHProtos.Project build() {
        lighthouse.protocol.LHProtos.Project result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public lighthouse.protocol.LHProtos.Project buildPartial() {
        lighthouse.protocol.LHProtos.Project result = new lighthouse.protocol.LHProtos.Project(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.paymentDetailsVersion_ = paymentDetailsVersion_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.pkiType_ = pkiType_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.pkiData_ = pkiData_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.serializedPaymentDetails_ = serializedPaymentDetails_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.signature_ = signature_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof lighthouse.protocol.LHProtos.Project) {
          return mergeFrom((lighthouse.protocol.LHProtos.Project)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(lighthouse.protocol.LHProtos.Project other) {
        if (other == lighthouse.protocol.LHProtos.Project.getDefaultInstance()) return this;
        if (other.hasPaymentDetailsVersion()) {
          setPaymentDetailsVersion(other.getPaymentDetailsVersion());
        }
        if (other.hasPkiType()) {
          bitField0_ |= 0x00000002;
          pkiType_ = other.pkiType_;
          onChanged();
        }
        if (other.hasPkiData()) {
          setPkiData(other.getPkiData());
        }
        if (other.hasSerializedPaymentDetails()) {
          setSerializedPaymentDetails(other.getSerializedPaymentDetails());
        }
        if (other.hasSignature()) {
          setSignature(other.getSignature());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSerializedPaymentDetails()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        lighthouse.protocol.LHProtos.Project parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (lighthouse.protocol.LHProtos.Project) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional uint32 payment_details_version = 1 [default = 1];
      private int paymentDetailsVersion_ = 1;
      /**
       * <code>optional uint32 payment_details_version = 1 [default = 1];</code>
       */
      public boolean hasPaymentDetailsVersion() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 payment_details_version = 1 [default = 1];</code>
       */
      public int getPaymentDetailsVersion() {
        return paymentDetailsVersion_;
      }
      /**
       * <code>optional uint32 payment_details_version = 1 [default = 1];</code>
       */
      public Builder setPaymentDetailsVersion(int value) {
        bitField0_ |= 0x00000001;
        paymentDetailsVersion_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 payment_details_version = 1 [default = 1];</code>
       */
      public Builder clearPaymentDetailsVersion() {
        bitField0_ = (bitField0_ & ~0x00000001);
        paymentDetailsVersion_ = 1;
        onChanged();
        return this;
      }

      // optional string pki_type = 2 [default = "none"];
      private java.lang.Object pkiType_ = "none";
      /**
       * <code>optional string pki_type = 2 [default = "none"];</code>
       *
       * <pre>
       * none / x509+sha256 / x509+sha1
       * </pre>
       */
      public boolean hasPkiType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string pki_type = 2 [default = "none"];</code>
       *
       * <pre>
       * none / x509+sha256 / x509+sha1
       * </pre>
       */
      public java.lang.String getPkiType() {
        java.lang.Object ref = pkiType_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          pkiType_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string pki_type = 2 [default = "none"];</code>
       *
       * <pre>
       * none / x509+sha256 / x509+sha1
       * </pre>
       */
      public com.google.protobuf.ByteString
          getPkiTypeBytes() {
        java.lang.Object ref = pkiType_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          pkiType_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string pki_type = 2 [default = "none"];</code>
       *
       * <pre>
       * none / x509+sha256 / x509+sha1
       * </pre>
       */
      public Builder setPkiType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        pkiType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string pki_type = 2 [default = "none"];</code>
       *
       * <pre>
       * none / x509+sha256 / x509+sha1
       * </pre>
       */
      public Builder clearPkiType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        pkiType_ = getDefaultInstance().getPkiType();
        onChanged();
        return this;
      }
      /**
       * <code>optional string pki_type = 2 [default = "none"];</code>
       *
       * <pre>
       * none / x509+sha256 / x509+sha1
       * </pre>
       */
      public Builder setPkiTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        pkiType_ = value;
        onChanged();
        return this;
      }

      // optional bytes pki_data = 3;
      private com.google.protobuf.ByteString pkiData_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes pki_data = 3;</code>
       *
       * <pre>
       * depends on pki_type
       * </pre>
       */
      public boolean hasPkiData() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bytes pki_data = 3;</code>
       *
       * <pre>
       * depends on pki_type
       * </pre>
       */
      public com.google.protobuf.ByteString getPkiData() {
        return pkiData_;
      }
      /**
       * <code>optional bytes pki_data = 3;</code>
       *
       * <pre>
       * depends on pki_type
       * </pre>
       */
      public Builder setPkiData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        pkiData_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes pki_data = 3;</code>
       *
       * <pre>
       * depends on pki_type
       * </pre>
       */
      public Builder clearPkiData() {
        bitField0_ = (bitField0_ & ~0x00000004);
        pkiData_ = getDefaultInstance().getPkiData();
        onChanged();
        return this;
      }

      // required bytes serialized_payment_details = 4;
      private com.google.protobuf.ByteString serializedPaymentDetails_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes serialized_payment_details = 4;</code>
       *
       * <pre>
       * ProjectDetails
       * </pre>
       */
      public boolean hasSerializedPaymentDetails() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required bytes serialized_payment_details = 4;</code>
       *
       * <pre>
       * ProjectDetails
       * </pre>
       */
      public com.google.protobuf.ByteString getSerializedPaymentDetails() {
        return serializedPaymentDetails_;
      }
      /**
       * <code>required bytes serialized_payment_details = 4;</code>
       *
       * <pre>
       * ProjectDetails
       * </pre>
       */
      public Builder setSerializedPaymentDetails(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        serializedPaymentDetails_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes serialized_payment_details = 4;</code>
       *
       * <pre>
       * ProjectDetails
       * </pre>
       */
      public Builder clearSerializedPaymentDetails() {
        bitField0_ = (bitField0_ & ~0x00000008);
        serializedPaymentDetails_ = getDefaultInstance().getSerializedPaymentDetails();
        onChanged();
        return this;
      }

      // optional bytes signature = 5;
      private com.google.protobuf.ByteString signature_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes signature = 5;</code>
       *
       * <pre>
       * pki-dependent signature
       * </pre>
       */
      public boolean hasSignature() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional bytes signature = 5;</code>
       *
       * <pre>
       * pki-dependent signature
       * </pre>
       */
      public com.google.protobuf.ByteString getSignature() {
        return signature_;
      }
      /**
       * <code>optional bytes signature = 5;</code>
       *
       * <pre>
       * pki-dependent signature
       * </pre>
       */
      public Builder setSignature(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        signature_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes signature = 5;</code>
       *
       * <pre>
       * pki-dependent signature
       * </pre>
       */
      public Builder clearSignature() {
        bitField0_ = (bitField0_ & ~0x00000010);
        signature_ = getDefaultInstance().getSignature();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:lighthouse.Project)
    }

    static {
      defaultInstance = new Project(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:lighthouse.Project)
  }

  public interface X509CertificatesOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated bytes certificate = 1;
    /**
     * <code>repeated bytes certificate = 1;</code>
     *
     * <pre>
     * DER-encoded X.509 certificate chain
     * </pre>
     */
    java.util.List<com.google.protobuf.ByteString> getCertificateList();
    /**
     * <code>repeated bytes certificate = 1;</code>
     *
     * <pre>
     * DER-encoded X.509 certificate chain
     * </pre>
     */
    int getCertificateCount();
    /**
     * <code>repeated bytes certificate = 1;</code>
     *
     * <pre>
     * DER-encoded X.509 certificate chain
     * </pre>
     */
    com.google.protobuf.ByteString getCertificate(int index);
  }
  /**
   * Protobuf type {@code lighthouse.X509Certificates}
   */
  public static final class X509Certificates extends
      com.google.protobuf.GeneratedMessage
      implements X509CertificatesOrBuilder {
    // Use X509Certificates.newBuilder() to construct.
    private X509Certificates(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private X509Certificates(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final X509Certificates defaultInstance;
    public static X509Certificates getDefaultInstance() {
      return defaultInstance;
    }

    public X509Certificates getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private X509Certificates(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                certificate_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
                mutable_bitField0_ |= 0x00000001;
              }
              certificate_.add(input.readBytes());
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          certificate_ = java.util.Collections.unmodifiableList(certificate_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return lighthouse.protocol.LHProtos.internal_static_lighthouse_X509Certificates_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return lighthouse.protocol.LHProtos.internal_static_lighthouse_X509Certificates_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              lighthouse.protocol.LHProtos.X509Certificates.class, lighthouse.protocol.LHProtos.X509Certificates.Builder.class);
    }

    public static com.google.protobuf.Parser<X509Certificates> PARSER =
        new com.google.protobuf.AbstractParser<X509Certificates>() {
      public X509Certificates parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new X509Certificates(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<X509Certificates> getParserForType() {
      return PARSER;
    }

    // repeated bytes certificate = 1;
    public static final int CERTIFICATE_FIELD_NUMBER = 1;
    private java.util.List<com.google.protobuf.ByteString> certificate_;
    /**
     * <code>repeated bytes certificate = 1;</code>
     *
     * <pre>
     * DER-encoded X.509 certificate chain
     * </pre>
     */
    public java.util.List<com.google.protobuf.ByteString>
        getCertificateList() {
      return certificate_;
    }
    /**
     * <code>repeated bytes certificate = 1;</code>
     *
     * <pre>
     * DER-encoded X.509 certificate chain
     * </pre>
     */
    public int getCertificateCount() {
      return certificate_.size();
    }
    /**
     * <code>repeated bytes certificate = 1;</code>
     *
     * <pre>
     * DER-encoded X.509 certificate chain
     * </pre>
     */
    public com.google.protobuf.ByteString getCertificate(int index) {
      return certificate_.get(index);
    }

    private void initFields() {
      certificate_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < certificate_.size(); i++) {
        output.writeBytes(1, certificate_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < certificate_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(certificate_.get(i));
        }
        size += dataSize;
        size += 1 * getCertificateList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static lighthouse.protocol.LHProtos.X509Certificates parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static lighthouse.protocol.LHProtos.X509Certificates parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static lighthouse.protocol.LHProtos.X509Certificates parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static lighthouse.protocol.LHProtos.X509Certificates parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static lighthouse.protocol.LHProtos.X509Certificates parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static lighthouse.protocol.LHProtos.X509Certificates parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static lighthouse.protocol.LHProtos.X509Certificates parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static lighthouse.protocol.LHProtos.X509Certificates parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static lighthouse.protocol.LHProtos.X509Certificates parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static lighthouse.protocol.LHProtos.X509Certificates parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(lighthouse.protocol.LHProtos.X509Certificates prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code lighthouse.X509Certificates}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements lighthouse.protocol.LHProtos.X509CertificatesOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return lighthouse.protocol.LHProtos.internal_static_lighthouse_X509Certificates_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return lighthouse.protocol.LHProtos.internal_static_lighthouse_X509Certificates_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                lighthouse.protocol.LHProtos.X509Certificates.class, lighthouse.protocol.LHProtos.X509Certificates.Builder.class);
      }

      // Construct using lighthouse.protocol.LHProtos.X509Certificates.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        certificate_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return lighthouse.protocol.LHProtos.internal_static_lighthouse_X509Certificates_descriptor;
      }

      public lighthouse.protocol.LHProtos.X509Certificates getDefaultInstanceForType() {
        return lighthouse.protocol.LHProtos.X509Certificates.getDefaultInstance();
      }

      public lighthouse.protocol.LHProtos.X509Certificates build() {
        lighthouse.protocol.LHProtos.X509Certificates result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public lighthouse.protocol.LHProtos.X509Certificates buildPartial() {
        lighthouse.protocol.LHProtos.X509Certificates result = new lighthouse.protocol.LHProtos.X509Certificates(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          certificate_ = java.util.Collections.unmodifiableList(certificate_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.certificate_ = certificate_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof lighthouse.protocol.LHProtos.X509Certificates) {
          return mergeFrom((lighthouse.protocol.LHProtos.X509Certificates)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(lighthouse.protocol.LHProtos.X509Certificates other) {
        if (other == lighthouse.protocol.LHProtos.X509Certificates.getDefaultInstance()) return this;
        if (!other.certificate_.isEmpty()) {
          if (certificate_.isEmpty()) {
            certificate_ = other.certificate_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureCertificateIsMutable();
            certificate_.addAll(other.certificate_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        lighthouse.protocol.LHProtos.X509Certificates parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (lighthouse.protocol.LHProtos.X509Certificates) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated bytes certificate = 1;
      private java.util.List<com.google.protobuf.ByteString> certificate_ = java.util.Collections.emptyList();
      private void ensureCertificateIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          certificate_ = new java.util.ArrayList<com.google.protobuf.ByteString>(certificate_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated bytes certificate = 1;</code>
       *
       * <pre>
       * DER-encoded X.509 certificate chain
       * </pre>
       */
      public java.util.List<com.google.protobuf.ByteString>
          getCertificateList() {
        return java.util.Collections.unmodifiableList(certificate_);
      }
      /**
       * <code>repeated bytes certificate = 1;</code>
       *
       * <pre>
       * DER-encoded X.509 certificate chain
       * </pre>
       */
      public int getCertificateCount() {
        return certificate_.size();
      }
      /**
       * <code>repeated bytes certificate = 1;</code>
       *
       * <pre>
       * DER-encoded X.509 certificate chain
       * </pre>
       */
      public com.google.protobuf.ByteString getCertificate(int index) {
        return certificate_.get(index);
      }
      /**
       * <code>repeated bytes certificate = 1;</code>
       *
       * <pre>
       * DER-encoded X.509 certificate chain
       * </pre>
       */
      public Builder setCertificate(
          int index, com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureCertificateIsMutable();
        certificate_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes certificate = 1;</code>
       *
       * <pre>
       * DER-encoded X.509 certificate chain
       * </pre>
       */
      public Builder addCertificate(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureCertificateIsMutable();
        certificate_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes certificate = 1;</code>
       *
       * <pre>
       * DER-encoded X.509 certificate chain
       * </pre>
       */
      public Builder addAllCertificate(
          java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
        ensureCertificateIsMutable();
        super.addAll(values, certificate_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes certificate = 1;</code>
       *
       * <pre>
       * DER-encoded X.509 certificate chain
       * </pre>
       */
      public Builder clearCertificate() {
        certificate_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:lighthouse.X509Certificates)
    }

    static {
      defaultInstance = new X509Certificates(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:lighthouse.X509Certificates)
  }

  public interface PledgeDetailsOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string memo = 1;
    /**
     * <code>optional string memo = 1;</code>
     *
     * <pre>
     * Human-readable message for the project owner.
     * </pre>
     */
    boolean hasMemo();
    /**
     * <code>optional string memo = 1;</code>
     *
     * <pre>
     * Human-readable message for the project owner.
     * </pre>
     */
    java.lang.String getMemo();
    /**
     * <code>optional string memo = 1;</code>
     *
     * <pre>
     * Human-readable message for the project owner.
     * </pre>
     */
    com.google.protobuf.ByteString
        getMemoBytes();

    // optional string contact_address = 2;
    /**
     * <code>optional string contact_address = 2;</code>
     *
     * <pre>
     * i.e. email address
     * </pre>
     */
    boolean hasContactAddress();
    /**
     * <code>optional string contact_address = 2;</code>
     *
     * <pre>
     * i.e. email address
     * </pre>
     */
    java.lang.String getContactAddress();
    /**
     * <code>optional string contact_address = 2;</code>
     *
     * <pre>
     * i.e. email address
     * </pre>
     */
    com.google.protobuf.ByteString
        getContactAddressBytes();

    // required uint64 total_input_value = 3;
    /**
     * <code>required uint64 total_input_value = 3;</code>
     *
     * <pre>
     * This should be sum(transactions.connected_outputs.value), i.e. the amount of money put into the tx.
     * </pre>
     */
    boolean hasTotalInputValue();
    /**
     * <code>required uint64 total_input_value = 3;</code>
     *
     * <pre>
     * This should be sum(transactions.connected_outputs.value), i.e. the amount of money put into the tx.
     * </pre>
     */
    long getTotalInputValue();

    // required string project_id = 4;
    /**
     * <code>required string project_id = 4;</code>
     */
    boolean hasProjectId();
    /**
     * <code>required string project_id = 4;</code>
     */
    java.lang.String getProjectId();
    /**
     * <code>required string project_id = 4;</code>
     */
    com.google.protobuf.ByteString
        getProjectIdBytes();

    // required uint64 timestamp = 5;
    /**
     * <code>required uint64 timestamp = 5;</code>
     *
     * <pre>
     * Time in seconds.
     * </pre>
     */
    boolean hasTimestamp();
    /**
     * <code>required uint64 timestamp = 5;</code>
     *
     * <pre>
     * Time in seconds.
     * </pre>
     */
    long getTimestamp();

    // optional bytes orig_hash = 6;
    /**
     * <code>optional bytes orig_hash = 6;</code>
     *
     * <pre>
     * Hash of the original pledge as submitted, including tx data. This is used by the client to find its own
     * pledge in the scrubbed status report provided by the server so we don't show the same pledge in the UI
     * twice, and check if it was already revoked in case the server didn't catch up yet.
     * </pre>
     */
    boolean hasOrigHash();
    /**
     * <code>optional bytes orig_hash = 6;</code>
     *
     * <pre>
     * Hash of the original pledge as submitted, including tx data. This is used by the client to find its own
     * pledge in the scrubbed status report provided by the server so we don't show the same pledge in the UI
     * twice, and check if it was already revoked in case the server didn't catch up yet.
     * </pre>
     */
    com.google.protobuf.ByteString getOrigHash();

    // optional string name = 7;
    /**
     * <code>optional string name = 7;</code>
     *
     * <pre>
     * Name or pseudonym. This is public data.
     * </pre>
     */
    boolean hasName();
    /**
     * <code>optional string name = 7;</code>
     *
     * <pre>
     * Name or pseudonym. This is public data.
     * </pre>
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 7;</code>
     *
     * <pre>
     * Name or pseudonym. This is public data.
     * </pre>
     */
    com.google.protobuf.ByteString
        getNameBytes();
  }
  /**
   * Protobuf type {@code lighthouse.PledgeDetails}
   */
  public static final class PledgeDetails extends
      com.google.protobuf.GeneratedMessage
      implements PledgeDetailsOrBuilder {
    // Use PledgeDetails.newBuilder() to construct.
    private PledgeDetails(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PledgeDetails(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PledgeDetails defaultInstance;
    public static PledgeDetails getDefaultInstance() {
      return defaultInstance;
    }

    public PledgeDetails getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PledgeDetails(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              memo_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              contactAddress_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              totalInputValue_ = input.readUInt64();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              projectId_ = input.readBytes();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              timestamp_ = input.readUInt64();
              break;
            }
            case 50: {
              bitField0_ |= 0x00000020;
              origHash_ = input.readBytes();
              break;
            }
            case 58: {
              bitField0_ |= 0x00000040;
              name_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return lighthouse.protocol.LHProtos.internal_static_lighthouse_PledgeDetails_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return lighthouse.protocol.LHProtos.internal_static_lighthouse_PledgeDetails_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              lighthouse.protocol.LHProtos.PledgeDetails.class, lighthouse.protocol.LHProtos.PledgeDetails.Builder.class);
    }

    public static com.google.protobuf.Parser<PledgeDetails> PARSER =
        new com.google.protobuf.AbstractParser<PledgeDetails>() {
      public PledgeDetails parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PledgeDetails(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PledgeDetails> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string memo = 1;
    public static final int MEMO_FIELD_NUMBER = 1;
    private java.lang.Object memo_;
    /**
     * <code>optional string memo = 1;</code>
     *
     * <pre>
     * Human-readable message for the project owner.
     * </pre>
     */
    public boolean hasMemo() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string memo = 1;</code>
     *
     * <pre>
     * Human-readable message for the project owner.
     * </pre>
     */
    public java.lang.String getMemo() {
      java.lang.Object ref = memo_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          memo_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string memo = 1;</code>
     *
     * <pre>
     * Human-readable message for the project owner.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getMemoBytes() {
      java.lang.Object ref = memo_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        memo_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string contact_address = 2;
    public static final int CONTACT_ADDRESS_FIELD_NUMBER = 2;
    private java.lang.Object contactAddress_;
    /**
     * <code>optional string contact_address = 2;</code>
     *
     * <pre>
     * i.e. email address
     * </pre>
     */
    public boolean hasContactAddress() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string contact_address = 2;</code>
     *
     * <pre>
     * i.e. email address
     * </pre>
     */
    public java.lang.String getContactAddress() {
      java.lang.Object ref = contactAddress_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          contactAddress_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string contact_address = 2;</code>
     *
     * <pre>
     * i.e. email address
     * </pre>
     */
    public com.google.protobuf.ByteString
        getContactAddressBytes() {
      java.lang.Object ref = contactAddress_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        contactAddress_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required uint64 total_input_value = 3;
    public static final int TOTAL_INPUT_VALUE_FIELD_NUMBER = 3;
    private long totalInputValue_;
    /**
     * <code>required uint64 total_input_value = 3;</code>
     *
     * <pre>
     * This should be sum(transactions.connected_outputs.value), i.e. the amount of money put into the tx.
     * </pre>
     */
    public boolean hasTotalInputValue() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required uint64 total_input_value = 3;</code>
     *
     * <pre>
     * This should be sum(transactions.connected_outputs.value), i.e. the amount of money put into the tx.
     * </pre>
     */
    public long getTotalInputValue() {
      return totalInputValue_;
    }

    // required string project_id = 4;
    public static final int PROJECT_ID_FIELD_NUMBER = 4;
    private java.lang.Object projectId_;
    /**
     * <code>required string project_id = 4;</code>
     */
    public boolean hasProjectId() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required string project_id = 4;</code>
     */
    public java.lang.String getProjectId() {
      java.lang.Object ref = projectId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          projectId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string project_id = 4;</code>
     */
    public com.google.protobuf.ByteString
        getProjectIdBytes() {
      java.lang.Object ref = projectId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        projectId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required uint64 timestamp = 5;
    public static final int TIMESTAMP_FIELD_NUMBER = 5;
    private long timestamp_;
    /**
     * <code>required uint64 timestamp = 5;</code>
     *
     * <pre>
     * Time in seconds.
     * </pre>
     */
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required uint64 timestamp = 5;</code>
     *
     * <pre>
     * Time in seconds.
     * </pre>
     */
    public long getTimestamp() {
      return timestamp_;
    }

    // optional bytes orig_hash = 6;
    public static final int ORIG_HASH_FIELD_NUMBER = 6;
    private com.google.protobuf.ByteString origHash_;
    /**
     * <code>optional bytes orig_hash = 6;</code>
     *
     * <pre>
     * Hash of the original pledge as submitted, including tx data. This is used by the client to find its own
     * pledge in the scrubbed status report provided by the server so we don't show the same pledge in the UI
     * twice, and check if it was already revoked in case the server didn't catch up yet.
     * </pre>
     */
    public boolean hasOrigHash() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional bytes orig_hash = 6;</code>
     *
     * <pre>
     * Hash of the original pledge as submitted, including tx data. This is used by the client to find its own
     * pledge in the scrubbed status report provided by the server so we don't show the same pledge in the UI
     * twice, and check if it was already revoked in case the server didn't catch up yet.
     * </pre>
     */
    public com.google.protobuf.ByteString getOrigHash() {
      return origHash_;
    }

    // optional string name = 7;
    public static final int NAME_FIELD_NUMBER = 7;
    private java.lang.Object name_;
    /**
     * <code>optional string name = 7;</code>
     *
     * <pre>
     * Name or pseudonym. This is public data.
     * </pre>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional string name = 7;</code>
     *
     * <pre>
     * Name or pseudonym. This is public data.
     * </pre>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string name = 7;</code>
     *
     * <pre>
     * Name or pseudonym. This is public data.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      memo_ = "";
      contactAddress_ = "";
      totalInputValue_ = 0L;
      projectId_ = "";
      timestamp_ = 0L;
      origHash_ = com.google.protobuf.ByteString.EMPTY;
      name_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasTotalInputValue()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasProjectId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTimestamp()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getMemoBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getContactAddressBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt64(3, totalInputValue_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getProjectIdBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt64(5, timestamp_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(6, origHash_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(7, getNameBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getMemoBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getContactAddressBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, totalInputValue_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getProjectIdBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(5, timestamp_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, origHash_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, getNameBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static lighthouse.protocol.LHProtos.PledgeDetails parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static lighthouse.protocol.LHProtos.PledgeDetails parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static lighthouse.protocol.LHProtos.PledgeDetails parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static lighthouse.protocol.LHProtos.PledgeDetails parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static lighthouse.protocol.LHProtos.PledgeDetails parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static lighthouse.protocol.LHProtos.PledgeDetails parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static lighthouse.protocol.LHProtos.PledgeDetails parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static lighthouse.protocol.LHProtos.PledgeDetails parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static lighthouse.protocol.LHProtos.PledgeDetails parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static lighthouse.protocol.LHProtos.PledgeDetails parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(lighthouse.protocol.LHProtos.PledgeDetails prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code lighthouse.PledgeDetails}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements lighthouse.protocol.LHProtos.PledgeDetailsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return lighthouse.protocol.LHProtos.internal_static_lighthouse_PledgeDetails_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return lighthouse.protocol.LHProtos.internal_static_lighthouse_PledgeDetails_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                lighthouse.protocol.LHProtos.PledgeDetails.class, lighthouse.protocol.LHProtos.PledgeDetails.Builder.class);
      }

      // Construct using lighthouse.protocol.LHProtos.PledgeDetails.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        memo_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        contactAddress_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        totalInputValue_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        projectId_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        timestamp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        origHash_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000020);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return lighthouse.protocol.LHProtos.internal_static_lighthouse_PledgeDetails_descriptor;
      }

      public lighthouse.protocol.LHProtos.PledgeDetails getDefaultInstanceForType() {
        return lighthouse.protocol.LHProtos.PledgeDetails.getDefaultInstance();
      }

      public lighthouse.protocol.LHProtos.PledgeDetails build() {
        lighthouse.protocol.LHProtos.PledgeDetails result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public lighthouse.protocol.LHProtos.PledgeDetails buildPartial() {
        lighthouse.protocol.LHProtos.PledgeDetails result = new lighthouse.protocol.LHProtos.PledgeDetails(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.memo_ = memo_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.contactAddress_ = contactAddress_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.totalInputValue_ = totalInputValue_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.projectId_ = projectId_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.timestamp_ = timestamp_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.origHash_ = origHash_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.name_ = name_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof lighthouse.protocol.LHProtos.PledgeDetails) {
          return mergeFrom((lighthouse.protocol.LHProtos.PledgeDetails)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(lighthouse.protocol.LHProtos.PledgeDetails other) {
        if (other == lighthouse.protocol.LHProtos.PledgeDetails.getDefaultInstance()) return this;
        if (other.hasMemo()) {
          bitField0_ |= 0x00000001;
          memo_ = other.memo_;
          onChanged();
        }
        if (other.hasContactAddress()) {
          bitField0_ |= 0x00000002;
          contactAddress_ = other.contactAddress_;
          onChanged();
        }
        if (other.hasTotalInputValue()) {
          setTotalInputValue(other.getTotalInputValue());
        }
        if (other.hasProjectId()) {
          bitField0_ |= 0x00000008;
          projectId_ = other.projectId_;
          onChanged();
        }
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        if (other.hasOrigHash()) {
          setOrigHash(other.getOrigHash());
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000040;
          name_ = other.name_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTotalInputValue()) {
          
          return false;
        }
        if (!hasProjectId()) {
          
          return false;
        }
        if (!hasTimestamp()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        lighthouse.protocol.LHProtos.PledgeDetails parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (lighthouse.protocol.LHProtos.PledgeDetails) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string memo = 1;
      private java.lang.Object memo_ = "";
      /**
       * <code>optional string memo = 1;</code>
       *
       * <pre>
       * Human-readable message for the project owner.
       * </pre>
       */
      public boolean hasMemo() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string memo = 1;</code>
       *
       * <pre>
       * Human-readable message for the project owner.
       * </pre>
       */
      public java.lang.String getMemo() {
        java.lang.Object ref = memo_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          memo_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string memo = 1;</code>
       *
       * <pre>
       * Human-readable message for the project owner.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getMemoBytes() {
        java.lang.Object ref = memo_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          memo_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string memo = 1;</code>
       *
       * <pre>
       * Human-readable message for the project owner.
       * </pre>
       */
      public Builder setMemo(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        memo_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string memo = 1;</code>
       *
       * <pre>
       * Human-readable message for the project owner.
       * </pre>
       */
      public Builder clearMemo() {
        bitField0_ = (bitField0_ & ~0x00000001);
        memo_ = getDefaultInstance().getMemo();
        onChanged();
        return this;
      }
      /**
       * <code>optional string memo = 1;</code>
       *
       * <pre>
       * Human-readable message for the project owner.
       * </pre>
       */
      public Builder setMemoBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        memo_ = value;
        onChanged();
        return this;
      }

      // optional string contact_address = 2;
      private java.lang.Object contactAddress_ = "";
      /**
       * <code>optional string contact_address = 2;</code>
       *
       * <pre>
       * i.e. email address
       * </pre>
       */
      public boolean hasContactAddress() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string contact_address = 2;</code>
       *
       * <pre>
       * i.e. email address
       * </pre>
       */
      public java.lang.String getContactAddress() {
        java.lang.Object ref = contactAddress_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          contactAddress_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string contact_address = 2;</code>
       *
       * <pre>
       * i.e. email address
       * </pre>
       */
      public com.google.protobuf.ByteString
          getContactAddressBytes() {
        java.lang.Object ref = contactAddress_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          contactAddress_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string contact_address = 2;</code>
       *
       * <pre>
       * i.e. email address
       * </pre>
       */
      public Builder setContactAddress(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        contactAddress_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string contact_address = 2;</code>
       *
       * <pre>
       * i.e. email address
       * </pre>
       */
      public Builder clearContactAddress() {
        bitField0_ = (bitField0_ & ~0x00000002);
        contactAddress_ = getDefaultInstance().getContactAddress();
        onChanged();
        return this;
      }
      /**
       * <code>optional string contact_address = 2;</code>
       *
       * <pre>
       * i.e. email address
       * </pre>
       */
      public Builder setContactAddressBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        contactAddress_ = value;
        onChanged();
        return this;
      }

      // required uint64 total_input_value = 3;
      private long totalInputValue_ ;
      /**
       * <code>required uint64 total_input_value = 3;</code>
       *
       * <pre>
       * This should be sum(transactions.connected_outputs.value), i.e. the amount of money put into the tx.
       * </pre>
       */
      public boolean hasTotalInputValue() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required uint64 total_input_value = 3;</code>
       *
       * <pre>
       * This should be sum(transactions.connected_outputs.value), i.e. the amount of money put into the tx.
       * </pre>
       */
      public long getTotalInputValue() {
        return totalInputValue_;
      }
      /**
       * <code>required uint64 total_input_value = 3;</code>
       *
       * <pre>
       * This should be sum(transactions.connected_outputs.value), i.e. the amount of money put into the tx.
       * </pre>
       */
      public Builder setTotalInputValue(long value) {
        bitField0_ |= 0x00000004;
        totalInputValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 total_input_value = 3;</code>
       *
       * <pre>
       * This should be sum(transactions.connected_outputs.value), i.e. the amount of money put into the tx.
       * </pre>
       */
      public Builder clearTotalInputValue() {
        bitField0_ = (bitField0_ & ~0x00000004);
        totalInputValue_ = 0L;
        onChanged();
        return this;
      }

      // required string project_id = 4;
      private java.lang.Object projectId_ = "";
      /**
       * <code>required string project_id = 4;</code>
       */
      public boolean hasProjectId() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required string project_id = 4;</code>
       */
      public java.lang.String getProjectId() {
        java.lang.Object ref = projectId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          projectId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string project_id = 4;</code>
       */
      public com.google.protobuf.ByteString
          getProjectIdBytes() {
        java.lang.Object ref = projectId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          projectId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string project_id = 4;</code>
       */
      public Builder setProjectId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        projectId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string project_id = 4;</code>
       */
      public Builder clearProjectId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        projectId_ = getDefaultInstance().getProjectId();
        onChanged();
        return this;
      }
      /**
       * <code>required string project_id = 4;</code>
       */
      public Builder setProjectIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        projectId_ = value;
        onChanged();
        return this;
      }

      // required uint64 timestamp = 5;
      private long timestamp_ ;
      /**
       * <code>required uint64 timestamp = 5;</code>
       *
       * <pre>
       * Time in seconds.
       * </pre>
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required uint64 timestamp = 5;</code>
       *
       * <pre>
       * Time in seconds.
       * </pre>
       */
      public long getTimestamp() {
        return timestamp_;
      }
      /**
       * <code>required uint64 timestamp = 5;</code>
       *
       * <pre>
       * Time in seconds.
       * </pre>
       */
      public Builder setTimestamp(long value) {
        bitField0_ |= 0x00000010;
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 timestamp = 5;</code>
       *
       * <pre>
       * Time in seconds.
       * </pre>
       */
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000010);
        timestamp_ = 0L;
        onChanged();
        return this;
      }

      // optional bytes orig_hash = 6;
      private com.google.protobuf.ByteString origHash_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes orig_hash = 6;</code>
       *
       * <pre>
       * Hash of the original pledge as submitted, including tx data. This is used by the client to find its own
       * pledge in the scrubbed status report provided by the server so we don't show the same pledge in the UI
       * twice, and check if it was already revoked in case the server didn't catch up yet.
       * </pre>
       */
      public boolean hasOrigHash() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional bytes orig_hash = 6;</code>
       *
       * <pre>
       * Hash of the original pledge as submitted, including tx data. This is used by the client to find its own
       * pledge in the scrubbed status report provided by the server so we don't show the same pledge in the UI
       * twice, and check if it was already revoked in case the server didn't catch up yet.
       * </pre>
       */
      public com.google.protobuf.ByteString getOrigHash() {
        return origHash_;
      }
      /**
       * <code>optional bytes orig_hash = 6;</code>
       *
       * <pre>
       * Hash of the original pledge as submitted, including tx data. This is used by the client to find its own
       * pledge in the scrubbed status report provided by the server so we don't show the same pledge in the UI
       * twice, and check if it was already revoked in case the server didn't catch up yet.
       * </pre>
       */
      public Builder setOrigHash(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        origHash_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes orig_hash = 6;</code>
       *
       * <pre>
       * Hash of the original pledge as submitted, including tx data. This is used by the client to find its own
       * pledge in the scrubbed status report provided by the server so we don't show the same pledge in the UI
       * twice, and check if it was already revoked in case the server didn't catch up yet.
       * </pre>
       */
      public Builder clearOrigHash() {
        bitField0_ = (bitField0_ & ~0x00000020);
        origHash_ = getDefaultInstance().getOrigHash();
        onChanged();
        return this;
      }

      // optional string name = 7;
      private java.lang.Object name_ = "";
      /**
       * <code>optional string name = 7;</code>
       *
       * <pre>
       * Name or pseudonym. This is public data.
       * </pre>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional string name = 7;</code>
       *
       * <pre>
       * Name or pseudonym. This is public data.
       * </pre>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string name = 7;</code>
       *
       * <pre>
       * Name or pseudonym. This is public data.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string name = 7;</code>
       *
       * <pre>
       * Name or pseudonym. This is public data.
       * </pre>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 7;</code>
       *
       * <pre>
       * Name or pseudonym. This is public data.
       * </pre>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000040);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 7;</code>
       *
       * <pre>
       * Name or pseudonym. This is public data.
       * </pre>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        name_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:lighthouse.PledgeDetails)
    }

    static {
      defaultInstance = new PledgeDetails(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:lighthouse.PledgeDetails)
  }

  public interface PledgeOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional bytes merchant_data = 1;
    /**
     * <code>optional bytes merchant_data = 1;</code>
     *
     * <pre>
     * Unused in Lighthouse.
     * </pre>
     */
    boolean hasMerchantData();
    /**
     * <code>optional bytes merchant_data = 1;</code>
     *
     * <pre>
     * Unused in Lighthouse.
     * </pre>
     */
    com.google.protobuf.ByteString getMerchantData();

    // repeated bytes transactions = 2;
    /**
     * <code>repeated bytes transactions = 2;</code>
     *
     * <pre>
     * The pledge should come last. Dependencies that come beforehand will be broadcasted by the server, in server
     * assisted mode. When not using a server the app broadcasts dependencies itself. Delegating dep broadcast to the
     * server solves a race condition whereby your uploaded pledge might be seen as invalid because the server didn't
     * see the dependency yet.
     * </pre>
     */
    java.util.List<com.google.protobuf.ByteString> getTransactionsList();
    /**
     * <code>repeated bytes transactions = 2;</code>
     *
     * <pre>
     * The pledge should come last. Dependencies that come beforehand will be broadcasted by the server, in server
     * assisted mode. When not using a server the app broadcasts dependencies itself. Delegating dep broadcast to the
     * server solves a race condition whereby your uploaded pledge might be seen as invalid because the server didn't
     * see the dependency yet.
     * </pre>
     */
    int getTransactionsCount();
    /**
     * <code>repeated bytes transactions = 2;</code>
     *
     * <pre>
     * The pledge should come last. Dependencies that come beforehand will be broadcasted by the server, in server
     * assisted mode. When not using a server the app broadcasts dependencies itself. Delegating dep broadcast to the
     * server solves a race condition whereby your uploaded pledge might be seen as invalid because the server didn't
     * see the dependency yet.
     * </pre>
     */
    com.google.protobuf.ByteString getTransactions(int index);

    // repeated .lighthouse.Output refund_to = 3;
    /**
     * <code>repeated .lighthouse.Output refund_to = 3;</code>
     *
     * <pre>
     * Ignored
     * </pre>
     */
    java.util.List<lighthouse.protocol.LHProtos.Output> 
        getRefundToList();
    /**
     * <code>repeated .lighthouse.Output refund_to = 3;</code>
     *
     * <pre>
     * Ignored
     * </pre>
     */
    lighthouse.protocol.LHProtos.Output getRefundTo(int index);
    /**
     * <code>repeated .lighthouse.Output refund_to = 3;</code>
     *
     * <pre>
     * Ignored
     * </pre>
     */
    int getRefundToCount();
    /**
     * <code>repeated .lighthouse.Output refund_to = 3;</code>
     *
     * <pre>
     * Ignored
     * </pre>
     */
    java.util.List<? extends lighthouse.protocol.LHProtos.OutputOrBuilder> 
        getRefundToOrBuilderList();
    /**
     * <code>repeated .lighthouse.Output refund_to = 3;</code>
     *
     * <pre>
     * Ignored
     * </pre>
     */
    lighthouse.protocol.LHProtos.OutputOrBuilder getRefundToOrBuilder(
        int index);

    // optional .lighthouse.PledgeDetails pledge_details = 100;
    /**
     * <code>optional .lighthouse.PledgeDetails pledge_details = 100;</code>
     */
    boolean hasPledgeDetails();
    /**
     * <code>optional .lighthouse.PledgeDetails pledge_details = 100;</code>
     */
    lighthouse.protocol.LHProtos.PledgeDetails getPledgeDetails();
    /**
     * <code>optional .lighthouse.PledgeDetails pledge_details = 100;</code>
     */
    lighthouse.protocol.LHProtos.PledgeDetailsOrBuilder getPledgeDetailsOrBuilder();
  }
  /**
   * Protobuf type {@code lighthouse.Pledge}
   *
   * <pre>
   * Modified Payment message.
   * </pre>
   */
  public static final class Pledge extends
      com.google.protobuf.GeneratedMessage
      implements PledgeOrBuilder {
    // Use Pledge.newBuilder() to construct.
    private Pledge(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Pledge(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Pledge defaultInstance;
    public static Pledge getDefaultInstance() {
      return defaultInstance;
    }

    public Pledge getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Pledge(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              merchantData_ = input.readBytes();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                transactions_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
                mutable_bitField0_ |= 0x00000002;
              }
              transactions_.add(input.readBytes());
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                refundTo_ = new java.util.ArrayList<lighthouse.protocol.LHProtos.Output>();
                mutable_bitField0_ |= 0x00000004;
              }
              refundTo_.add(input.readMessage(lighthouse.protocol.LHProtos.Output.PARSER, extensionRegistry));
              break;
            }
            case 802: {
              lighthouse.protocol.LHProtos.PledgeDetails.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = pledgeDetails_.toBuilder();
              }
              pledgeDetails_ = input.readMessage(lighthouse.protocol.LHProtos.PledgeDetails.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(pledgeDetails_);
                pledgeDetails_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          transactions_ = java.util.Collections.unmodifiableList(transactions_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          refundTo_ = java.util.Collections.unmodifiableList(refundTo_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return lighthouse.protocol.LHProtos.internal_static_lighthouse_Pledge_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return lighthouse.protocol.LHProtos.internal_static_lighthouse_Pledge_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              lighthouse.protocol.LHProtos.Pledge.class, lighthouse.protocol.LHProtos.Pledge.Builder.class);
    }

    public static com.google.protobuf.Parser<Pledge> PARSER =
        new com.google.protobuf.AbstractParser<Pledge>() {
      public Pledge parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Pledge(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Pledge> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional bytes merchant_data = 1;
    public static final int MERCHANT_DATA_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString merchantData_;
    /**
     * <code>optional bytes merchant_data = 1;</code>
     *
     * <pre>
     * Unused in Lighthouse.
     * </pre>
     */
    public boolean hasMerchantData() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bytes merchant_data = 1;</code>
     *
     * <pre>
     * Unused in Lighthouse.
     * </pre>
     */
    public com.google.protobuf.ByteString getMerchantData() {
      return merchantData_;
    }

    // repeated bytes transactions = 2;
    public static final int TRANSACTIONS_FIELD_NUMBER = 2;
    private java.util.List<com.google.protobuf.ByteString> transactions_;
    /**
     * <code>repeated bytes transactions = 2;</code>
     *
     * <pre>
     * The pledge should come last. Dependencies that come beforehand will be broadcasted by the server, in server
     * assisted mode. When not using a server the app broadcasts dependencies itself. Delegating dep broadcast to the
     * server solves a race condition whereby your uploaded pledge might be seen as invalid because the server didn't
     * see the dependency yet.
     * </pre>
     */
    public java.util.List<com.google.protobuf.ByteString>
        getTransactionsList() {
      return transactions_;
    }
    /**
     * <code>repeated bytes transactions = 2;</code>
     *
     * <pre>
     * The pledge should come last. Dependencies that come beforehand will be broadcasted by the server, in server
     * assisted mode. When not using a server the app broadcasts dependencies itself. Delegating dep broadcast to the
     * server solves a race condition whereby your uploaded pledge might be seen as invalid because the server didn't
     * see the dependency yet.
     * </pre>
     */
    public int getTransactionsCount() {
      return transactions_.size();
    }
    /**
     * <code>repeated bytes transactions = 2;</code>
     *
     * <pre>
     * The pledge should come last. Dependencies that come beforehand will be broadcasted by the server, in server
     * assisted mode. When not using a server the app broadcasts dependencies itself. Delegating dep broadcast to the
     * server solves a race condition whereby your uploaded pledge might be seen as invalid because the server didn't
     * see the dependency yet.
     * </pre>
     */
    public com.google.protobuf.ByteString getTransactions(int index) {
      return transactions_.get(index);
    }

    // repeated .lighthouse.Output refund_to = 3;
    public static final int REFUND_TO_FIELD_NUMBER = 3;
    private java.util.List<lighthouse.protocol.LHProtos.Output> refundTo_;
    /**
     * <code>repeated .lighthouse.Output refund_to = 3;</code>
     *
     * <pre>
     * Ignored
     * </pre>
     */
    public java.util.List<lighthouse.protocol.LHProtos.Output> getRefundToList() {
      return refundTo_;
    }
    /**
     * <code>repeated .lighthouse.Output refund_to = 3;</code>
     *
     * <pre>
     * Ignored
     * </pre>
     */
    public java.util.List<? extends lighthouse.protocol.LHProtos.OutputOrBuilder> 
        getRefundToOrBuilderList() {
      return refundTo_;
    }
    /**
     * <code>repeated .lighthouse.Output refund_to = 3;</code>
     *
     * <pre>
     * Ignored
     * </pre>
     */
    public int getRefundToCount() {
      return refundTo_.size();
    }
    /**
     * <code>repeated .lighthouse.Output refund_to = 3;</code>
     *
     * <pre>
     * Ignored
     * </pre>
     */
    public lighthouse.protocol.LHProtos.Output getRefundTo(int index) {
      return refundTo_.get(index);
    }
    /**
     * <code>repeated .lighthouse.Output refund_to = 3;</code>
     *
     * <pre>
     * Ignored
     * </pre>
     */
    public lighthouse.protocol.LHProtos.OutputOrBuilder getRefundToOrBuilder(
        int index) {
      return refundTo_.get(index);
    }

    // optional .lighthouse.PledgeDetails pledge_details = 100;
    public static final int PLEDGE_DETAILS_FIELD_NUMBER = 100;
    private lighthouse.protocol.LHProtos.PledgeDetails pledgeDetails_;
    /**
     * <code>optional .lighthouse.PledgeDetails pledge_details = 100;</code>
     */
    public boolean hasPledgeDetails() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .lighthouse.PledgeDetails pledge_details = 100;</code>
     */
    public lighthouse.protocol.LHProtos.PledgeDetails getPledgeDetails() {
      return pledgeDetails_;
    }
    /**
     * <code>optional .lighthouse.PledgeDetails pledge_details = 100;</code>
     */
    public lighthouse.protocol.LHProtos.PledgeDetailsOrBuilder getPledgeDetailsOrBuilder() {
      return pledgeDetails_;
    }

    private void initFields() {
      merchantData_ = com.google.protobuf.ByteString.EMPTY;
      transactions_ = java.util.Collections.emptyList();
      refundTo_ = java.util.Collections.emptyList();
      pledgeDetails_ = lighthouse.protocol.LHProtos.PledgeDetails.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getRefundToCount(); i++) {
        if (!getRefundTo(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasPledgeDetails()) {
        if (!getPledgeDetails().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, merchantData_);
      }
      for (int i = 0; i < transactions_.size(); i++) {
        output.writeBytes(2, transactions_.get(i));
      }
      for (int i = 0; i < refundTo_.size(); i++) {
        output.writeMessage(3, refundTo_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(100, pledgeDetails_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, merchantData_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < transactions_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(transactions_.get(i));
        }
        size += dataSize;
        size += 1 * getTransactionsList().size();
      }
      for (int i = 0; i < refundTo_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, refundTo_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(100, pledgeDetails_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static lighthouse.protocol.LHProtos.Pledge parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static lighthouse.protocol.LHProtos.Pledge parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static lighthouse.protocol.LHProtos.Pledge parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static lighthouse.protocol.LHProtos.Pledge parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static lighthouse.protocol.LHProtos.Pledge parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static lighthouse.protocol.LHProtos.Pledge parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static lighthouse.protocol.LHProtos.Pledge parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static lighthouse.protocol.LHProtos.Pledge parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static lighthouse.protocol.LHProtos.Pledge parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static lighthouse.protocol.LHProtos.Pledge parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(lighthouse.protocol.LHProtos.Pledge prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code lighthouse.Pledge}
     *
     * <pre>
     * Modified Payment message.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements lighthouse.protocol.LHProtos.PledgeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return lighthouse.protocol.LHProtos.internal_static_lighthouse_Pledge_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return lighthouse.protocol.LHProtos.internal_static_lighthouse_Pledge_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                lighthouse.protocol.LHProtos.Pledge.class, lighthouse.protocol.LHProtos.Pledge.Builder.class);
      }

      // Construct using lighthouse.protocol.LHProtos.Pledge.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRefundToFieldBuilder();
          getPledgeDetailsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        merchantData_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        transactions_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        if (refundToBuilder_ == null) {
          refundTo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          refundToBuilder_.clear();
        }
        if (pledgeDetailsBuilder_ == null) {
          pledgeDetails_ = lighthouse.protocol.LHProtos.PledgeDetails.getDefaultInstance();
        } else {
          pledgeDetailsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return lighthouse.protocol.LHProtos.internal_static_lighthouse_Pledge_descriptor;
      }

      public lighthouse.protocol.LHProtos.Pledge getDefaultInstanceForType() {
        return lighthouse.protocol.LHProtos.Pledge.getDefaultInstance();
      }

      public lighthouse.protocol.LHProtos.Pledge build() {
        lighthouse.protocol.LHProtos.Pledge result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public lighthouse.protocol.LHProtos.Pledge buildPartial() {
        lighthouse.protocol.LHProtos.Pledge result = new lighthouse.protocol.LHProtos.Pledge(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.merchantData_ = merchantData_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          transactions_ = java.util.Collections.unmodifiableList(transactions_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.transactions_ = transactions_;
        if (refundToBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            refundTo_ = java.util.Collections.unmodifiableList(refundTo_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.refundTo_ = refundTo_;
        } else {
          result.refundTo_ = refundToBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000002;
        }
        if (pledgeDetailsBuilder_ == null) {
          result.pledgeDetails_ = pledgeDetails_;
        } else {
          result.pledgeDetails_ = pledgeDetailsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof lighthouse.protocol.LHProtos.Pledge) {
          return mergeFrom((lighthouse.protocol.LHProtos.Pledge)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(lighthouse.protocol.LHProtos.Pledge other) {
        if (other == lighthouse.protocol.LHProtos.Pledge.getDefaultInstance()) return this;
        if (other.hasMerchantData()) {
          setMerchantData(other.getMerchantData());
        }
        if (!other.transactions_.isEmpty()) {
          if (transactions_.isEmpty()) {
            transactions_ = other.transactions_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureTransactionsIsMutable();
            transactions_.addAll(other.transactions_);
          }
          onChanged();
        }
        if (refundToBuilder_ == null) {
          if (!other.refundTo_.isEmpty()) {
            if (refundTo_.isEmpty()) {
              refundTo_ = other.refundTo_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureRefundToIsMutable();
              refundTo_.addAll(other.refundTo_);
            }
            onChanged();
          }
        } else {
          if (!other.refundTo_.isEmpty()) {
            if (refundToBuilder_.isEmpty()) {
              refundToBuilder_.dispose();
              refundToBuilder_ = null;
              refundTo_ = other.refundTo_;
              bitField0_ = (bitField0_ & ~0x00000004);
              refundToBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRefundToFieldBuilder() : null;
            } else {
              refundToBuilder_.addAllMessages(other.refundTo_);
            }
          }
        }
        if (other.hasPledgeDetails()) {
          mergePledgeDetails(other.getPledgeDetails());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getRefundToCount(); i++) {
          if (!getRefundTo(i).isInitialized()) {
            
            return false;
          }
        }
        if (hasPledgeDetails()) {
          if (!getPledgeDetails().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        lighthouse.protocol.LHProtos.Pledge parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (lighthouse.protocol.LHProtos.Pledge) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional bytes merchant_data = 1;
      private com.google.protobuf.ByteString merchantData_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes merchant_data = 1;</code>
       *
       * <pre>
       * Unused in Lighthouse.
       * </pre>
       */
      public boolean hasMerchantData() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bytes merchant_data = 1;</code>
       *
       * <pre>
       * Unused in Lighthouse.
       * </pre>
       */
      public com.google.protobuf.ByteString getMerchantData() {
        return merchantData_;
      }
      /**
       * <code>optional bytes merchant_data = 1;</code>
       *
       * <pre>
       * Unused in Lighthouse.
       * </pre>
       */
      public Builder setMerchantData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        merchantData_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes merchant_data = 1;</code>
       *
       * <pre>
       * Unused in Lighthouse.
       * </pre>
       */
      public Builder clearMerchantData() {
        bitField0_ = (bitField0_ & ~0x00000001);
        merchantData_ = getDefaultInstance().getMerchantData();
        onChanged();
        return this;
      }

      // repeated bytes transactions = 2;
      private java.util.List<com.google.protobuf.ByteString> transactions_ = java.util.Collections.emptyList();
      private void ensureTransactionsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          transactions_ = new java.util.ArrayList<com.google.protobuf.ByteString>(transactions_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated bytes transactions = 2;</code>
       *
       * <pre>
       * The pledge should come last. Dependencies that come beforehand will be broadcasted by the server, in server
       * assisted mode. When not using a server the app broadcasts dependencies itself. Delegating dep broadcast to the
       * server solves a race condition whereby your uploaded pledge might be seen as invalid because the server didn't
       * see the dependency yet.
       * </pre>
       */
      public java.util.List<com.google.protobuf.ByteString>
          getTransactionsList() {
        return java.util.Collections.unmodifiableList(transactions_);
      }
      /**
       * <code>repeated bytes transactions = 2;</code>
       *
       * <pre>
       * The pledge should come last. Dependencies that come beforehand will be broadcasted by the server, in server
       * assisted mode. When not using a server the app broadcasts dependencies itself. Delegating dep broadcast to the
       * server solves a race condition whereby your uploaded pledge might be seen as invalid because the server didn't
       * see the dependency yet.
       * </pre>
       */
      public int getTransactionsCount() {
        return transactions_.size();
      }
      /**
       * <code>repeated bytes transactions = 2;</code>
       *
       * <pre>
       * The pledge should come last. Dependencies that come beforehand will be broadcasted by the server, in server
       * assisted mode. When not using a server the app broadcasts dependencies itself. Delegating dep broadcast to the
       * server solves a race condition whereby your uploaded pledge might be seen as invalid because the server didn't
       * see the dependency yet.
       * </pre>
       */
      public com.google.protobuf.ByteString getTransactions(int index) {
        return transactions_.get(index);
      }
      /**
       * <code>repeated bytes transactions = 2;</code>
       *
       * <pre>
       * The pledge should come last. Dependencies that come beforehand will be broadcasted by the server, in server
       * assisted mode. When not using a server the app broadcasts dependencies itself. Delegating dep broadcast to the
       * server solves a race condition whereby your uploaded pledge might be seen as invalid because the server didn't
       * see the dependency yet.
       * </pre>
       */
      public Builder setTransactions(
          int index, com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureTransactionsIsMutable();
        transactions_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes transactions = 2;</code>
       *
       * <pre>
       * The pledge should come last. Dependencies that come beforehand will be broadcasted by the server, in server
       * assisted mode. When not using a server the app broadcasts dependencies itself. Delegating dep broadcast to the
       * server solves a race condition whereby your uploaded pledge might be seen as invalid because the server didn't
       * see the dependency yet.
       * </pre>
       */
      public Builder addTransactions(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureTransactionsIsMutable();
        transactions_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes transactions = 2;</code>
       *
       * <pre>
       * The pledge should come last. Dependencies that come beforehand will be broadcasted by the server, in server
       * assisted mode. When not using a server the app broadcasts dependencies itself. Delegating dep broadcast to the
       * server solves a race condition whereby your uploaded pledge might be seen as invalid because the server didn't
       * see the dependency yet.
       * </pre>
       */
      public Builder addAllTransactions(
          java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
        ensureTransactionsIsMutable();
        super.addAll(values, transactions_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes transactions = 2;</code>
       *
       * <pre>
       * The pledge should come last. Dependencies that come beforehand will be broadcasted by the server, in server
       * assisted mode. When not using a server the app broadcasts dependencies itself. Delegating dep broadcast to the
       * server solves a race condition whereby your uploaded pledge might be seen as invalid because the server didn't
       * see the dependency yet.
       * </pre>
       */
      public Builder clearTransactions() {
        transactions_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // repeated .lighthouse.Output refund_to = 3;
      private java.util.List<lighthouse.protocol.LHProtos.Output> refundTo_ =
        java.util.Collections.emptyList();
      private void ensureRefundToIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          refundTo_ = new java.util.ArrayList<lighthouse.protocol.LHProtos.Output>(refundTo_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          lighthouse.protocol.LHProtos.Output, lighthouse.protocol.LHProtos.Output.Builder, lighthouse.protocol.LHProtos.OutputOrBuilder> refundToBuilder_;

      /**
       * <code>repeated .lighthouse.Output refund_to = 3;</code>
       *
       * <pre>
       * Ignored
       * </pre>
       */
      public java.util.List<lighthouse.protocol.LHProtos.Output> getRefundToList() {
        if (refundToBuilder_ == null) {
          return java.util.Collections.unmodifiableList(refundTo_);
        } else {
          return refundToBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .lighthouse.Output refund_to = 3;</code>
       *
       * <pre>
       * Ignored
       * </pre>
       */
      public int getRefundToCount() {
        if (refundToBuilder_ == null) {
          return refundTo_.size();
        } else {
          return refundToBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .lighthouse.Output refund_to = 3;</code>
       *
       * <pre>
       * Ignored
       * </pre>
       */
      public lighthouse.protocol.LHProtos.Output getRefundTo(int index) {
        if (refundToBuilder_ == null) {
          return refundTo_.get(index);
        } else {
          return refundToBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .lighthouse.Output refund_to = 3;</code>
       *
       * <pre>
       * Ignored
       * </pre>
       */
      public Builder setRefundTo(
          int index, lighthouse.protocol.LHProtos.Output value) {
        if (refundToBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRefundToIsMutable();
          refundTo_.set(index, value);
          onChanged();
        } else {
          refundToBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .lighthouse.Output refund_to = 3;</code>
       *
       * <pre>
       * Ignored
       * </pre>
       */
      public Builder setRefundTo(
          int index, lighthouse.protocol.LHProtos.Output.Builder builderForValue) {
        if (refundToBuilder_ == null) {
          ensureRefundToIsMutable();
          refundTo_.set(index, builderForValue.build());
          onChanged();
        } else {
          refundToBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .lighthouse.Output refund_to = 3;</code>
       *
       * <pre>
       * Ignored
       * </pre>
       */
      public Builder addRefundTo(lighthouse.protocol.LHProtos.Output value) {
        if (refundToBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRefundToIsMutable();
          refundTo_.add(value);
          onChanged();
        } else {
          refundToBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .lighthouse.Output refund_to = 3;</code>
       *
       * <pre>
       * Ignored
       * </pre>
       */
      public Builder addRefundTo(
          int index, lighthouse.protocol.LHProtos.Output value) {
        if (refundToBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRefundToIsMutable();
          refundTo_.add(index, value);
          onChanged();
        } else {
          refundToBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .lighthouse.Output refund_to = 3;</code>
       *
       * <pre>
       * Ignored
       * </pre>
       */
      public Builder addRefundTo(
          lighthouse.protocol.LHProtos.Output.Builder builderForValue) {
        if (refundToBuilder_ == null) {
          ensureRefundToIsMutable();
          refundTo_.add(builderForValue.build());
          onChanged();
        } else {
          refundToBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .lighthouse.Output refund_to = 3;</code>
       *
       * <pre>
       * Ignored
       * </pre>
       */
      public Builder addRefundTo(
          int index, lighthouse.protocol.LHProtos.Output.Builder builderForValue) {
        if (refundToBuilder_ == null) {
          ensureRefundToIsMutable();
          refundTo_.add(index, builderForValue.build());
          onChanged();
        } else {
          refundToBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .lighthouse.Output refund_to = 3;</code>
       *
       * <pre>
       * Ignored
       * </pre>
       */
      public Builder addAllRefundTo(
          java.lang.Iterable<? extends lighthouse.protocol.LHProtos.Output> values) {
        if (refundToBuilder_ == null) {
          ensureRefundToIsMutable();
          super.addAll(values, refundTo_);
          onChanged();
        } else {
          refundToBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .lighthouse.Output refund_to = 3;</code>
       *
       * <pre>
       * Ignored
       * </pre>
       */
      public Builder clearRefundTo() {
        if (refundToBuilder_ == null) {
          refundTo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          refundToBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .lighthouse.Output refund_to = 3;</code>
       *
       * <pre>
       * Ignored
       * </pre>
       */
      public Builder removeRefundTo(int index) {
        if (refundToBuilder_ == null) {
          ensureRefundToIsMutable();
          refundTo_.remove(index);
          onChanged();
        } else {
          refundToBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .lighthouse.Output refund_to = 3;</code>
       *
       * <pre>
       * Ignored
       * </pre>
       */
      public lighthouse.protocol.LHProtos.Output.Builder getRefundToBuilder(
          int index) {
        return getRefundToFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .lighthouse.Output refund_to = 3;</code>
       *
       * <pre>
       * Ignored
       * </pre>
       */
      public lighthouse.protocol.LHProtos.OutputOrBuilder getRefundToOrBuilder(
          int index) {
        if (refundToBuilder_ == null) {
          return refundTo_.get(index);  } else {
          return refundToBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .lighthouse.Output refund_to = 3;</code>
       *
       * <pre>
       * Ignored
       * </pre>
       */
      public java.util.List<? extends lighthouse.protocol.LHProtos.OutputOrBuilder> 
           getRefundToOrBuilderList() {
        if (refundToBuilder_ != null) {
          return refundToBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(refundTo_);
        }
      }
      /**
       * <code>repeated .lighthouse.Output refund_to = 3;</code>
       *
       * <pre>
       * Ignored
       * </pre>
       */
      public lighthouse.protocol.LHProtos.Output.Builder addRefundToBuilder() {
        return getRefundToFieldBuilder().addBuilder(
            lighthouse.protocol.LHProtos.Output.getDefaultInstance());
      }
      /**
       * <code>repeated .lighthouse.Output refund_to = 3;</code>
       *
       * <pre>
       * Ignored
       * </pre>
       */
      public lighthouse.protocol.LHProtos.Output.Builder addRefundToBuilder(
          int index) {
        return getRefundToFieldBuilder().addBuilder(
            index, lighthouse.protocol.LHProtos.Output.getDefaultInstance());
      }
      /**
       * <code>repeated .lighthouse.Output refund_to = 3;</code>
       *
       * <pre>
       * Ignored
       * </pre>
       */
      public java.util.List<lighthouse.protocol.LHProtos.Output.Builder> 
           getRefundToBuilderList() {
        return getRefundToFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          lighthouse.protocol.LHProtos.Output, lighthouse.protocol.LHProtos.Output.Builder, lighthouse.protocol.LHProtos.OutputOrBuilder> 
          getRefundToFieldBuilder() {
        if (refundToBuilder_ == null) {
          refundToBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              lighthouse.protocol.LHProtos.Output, lighthouse.protocol.LHProtos.Output.Builder, lighthouse.protocol.LHProtos.OutputOrBuilder>(
                  refundTo_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          refundTo_ = null;
        }
        return refundToBuilder_;
      }

      // optional .lighthouse.PledgeDetails pledge_details = 100;
      private lighthouse.protocol.LHProtos.PledgeDetails pledgeDetails_ = lighthouse.protocol.LHProtos.PledgeDetails.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          lighthouse.protocol.LHProtos.PledgeDetails, lighthouse.protocol.LHProtos.PledgeDetails.Builder, lighthouse.protocol.LHProtos.PledgeDetailsOrBuilder> pledgeDetailsBuilder_;
      /**
       * <code>optional .lighthouse.PledgeDetails pledge_details = 100;</code>
       */
      public boolean hasPledgeDetails() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .lighthouse.PledgeDetails pledge_details = 100;</code>
       */
      public lighthouse.protocol.LHProtos.PledgeDetails getPledgeDetails() {
        if (pledgeDetailsBuilder_ == null) {
          return pledgeDetails_;
        } else {
          return pledgeDetailsBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .lighthouse.PledgeDetails pledge_details = 100;</code>
       */
      public Builder setPledgeDetails(lighthouse.protocol.LHProtos.PledgeDetails value) {
        if (pledgeDetailsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          pledgeDetails_ = value;
          onChanged();
        } else {
          pledgeDetailsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .lighthouse.PledgeDetails pledge_details = 100;</code>
       */
      public Builder setPledgeDetails(
          lighthouse.protocol.LHProtos.PledgeDetails.Builder builderForValue) {
        if (pledgeDetailsBuilder_ == null) {
          pledgeDetails_ = builderForValue.build();
          onChanged();
        } else {
          pledgeDetailsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .lighthouse.PledgeDetails pledge_details = 100;</code>
       */
      public Builder mergePledgeDetails(lighthouse.protocol.LHProtos.PledgeDetails value) {
        if (pledgeDetailsBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              pledgeDetails_ != lighthouse.protocol.LHProtos.PledgeDetails.getDefaultInstance()) {
            pledgeDetails_ =
              lighthouse.protocol.LHProtos.PledgeDetails.newBuilder(pledgeDetails_).mergeFrom(value).buildPartial();
          } else {
            pledgeDetails_ = value;
          }
          onChanged();
        } else {
          pledgeDetailsBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .lighthouse.PledgeDetails pledge_details = 100;</code>
       */
      public Builder clearPledgeDetails() {
        if (pledgeDetailsBuilder_ == null) {
          pledgeDetails_ = lighthouse.protocol.LHProtos.PledgeDetails.getDefaultInstance();
          onChanged();
        } else {
          pledgeDetailsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .lighthouse.PledgeDetails pledge_details = 100;</code>
       */
      public lighthouse.protocol.LHProtos.PledgeDetails.Builder getPledgeDetailsBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getPledgeDetailsFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .lighthouse.PledgeDetails pledge_details = 100;</code>
       */
      public lighthouse.protocol.LHProtos.PledgeDetailsOrBuilder getPledgeDetailsOrBuilder() {
        if (pledgeDetailsBuilder_ != null) {
          return pledgeDetailsBuilder_.getMessageOrBuilder();
        } else {
          return pledgeDetails_;
        }
      }
      /**
       * <code>optional .lighthouse.PledgeDetails pledge_details = 100;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          lighthouse.protocol.LHProtos.PledgeDetails, lighthouse.protocol.LHProtos.PledgeDetails.Builder, lighthouse.protocol.LHProtos.PledgeDetailsOrBuilder> 
          getPledgeDetailsFieldBuilder() {
        if (pledgeDetailsBuilder_ == null) {
          pledgeDetailsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              lighthouse.protocol.LHProtos.PledgeDetails, lighthouse.protocol.LHProtos.PledgeDetails.Builder, lighthouse.protocol.LHProtos.PledgeDetailsOrBuilder>(
                  pledgeDetails_,
                  getParentForChildren(),
                  isClean());
          pledgeDetails_ = null;
        }
        return pledgeDetailsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:lighthouse.Pledge)
    }

    static {
      defaultInstance = new Pledge(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:lighthouse.Pledge)
  }

  public interface PledgeACKOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required .lighthouse.Pledge payment = 1;
    /**
     * <code>required .lighthouse.Pledge payment = 1;</code>
     *
     * <pre>
     * Payment message that triggered this ACK
     * </pre>
     */
    boolean hasPayment();
    /**
     * <code>required .lighthouse.Pledge payment = 1;</code>
     *
     * <pre>
     * Payment message that triggered this ACK
     * </pre>
     */
    lighthouse.protocol.LHProtos.Pledge getPayment();
    /**
     * <code>required .lighthouse.Pledge payment = 1;</code>
     *
     * <pre>
     * Payment message that triggered this ACK
     * </pre>
     */
    lighthouse.protocol.LHProtos.PledgeOrBuilder getPaymentOrBuilder();

    // optional string memo = 2;
    /**
     * <code>optional string memo = 2;</code>
     *
     * <pre>
     * human-readable message for customer
     * </pre>
     */
    boolean hasMemo();
    /**
     * <code>optional string memo = 2;</code>
     *
     * <pre>
     * human-readable message for customer
     * </pre>
     */
    java.lang.String getMemo();
    /**
     * <code>optional string memo = 2;</code>
     *
     * <pre>
     * human-readable message for customer
     * </pre>
     */
    com.google.protobuf.ByteString
        getMemoBytes();
  }
  /**
   * Protobuf type {@code lighthouse.PledgeACK}
   */
  public static final class PledgeACK extends
      com.google.protobuf.GeneratedMessage
      implements PledgeACKOrBuilder {
    // Use PledgeACK.newBuilder() to construct.
    private PledgeACK(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PledgeACK(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PledgeACK defaultInstance;
    public static PledgeACK getDefaultInstance() {
      return defaultInstance;
    }

    public PledgeACK getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PledgeACK(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              lighthouse.protocol.LHProtos.Pledge.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = payment_.toBuilder();
              }
              payment_ = input.readMessage(lighthouse.protocol.LHProtos.Pledge.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(payment_);
                payment_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              memo_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return lighthouse.protocol.LHProtos.internal_static_lighthouse_PledgeACK_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return lighthouse.protocol.LHProtos.internal_static_lighthouse_PledgeACK_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              lighthouse.protocol.LHProtos.PledgeACK.class, lighthouse.protocol.LHProtos.PledgeACK.Builder.class);
    }

    public static com.google.protobuf.Parser<PledgeACK> PARSER =
        new com.google.protobuf.AbstractParser<PledgeACK>() {
      public PledgeACK parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PledgeACK(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PledgeACK> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required .lighthouse.Pledge payment = 1;
    public static final int PAYMENT_FIELD_NUMBER = 1;
    private lighthouse.protocol.LHProtos.Pledge payment_;
    /**
     * <code>required .lighthouse.Pledge payment = 1;</code>
     *
     * <pre>
     * Payment message that triggered this ACK
     * </pre>
     */
    public boolean hasPayment() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .lighthouse.Pledge payment = 1;</code>
     *
     * <pre>
     * Payment message that triggered this ACK
     * </pre>
     */
    public lighthouse.protocol.LHProtos.Pledge getPayment() {
      return payment_;
    }
    /**
     * <code>required .lighthouse.Pledge payment = 1;</code>
     *
     * <pre>
     * Payment message that triggered this ACK
     * </pre>
     */
    public lighthouse.protocol.LHProtos.PledgeOrBuilder getPaymentOrBuilder() {
      return payment_;
    }

    // optional string memo = 2;
    public static final int MEMO_FIELD_NUMBER = 2;
    private java.lang.Object memo_;
    /**
     * <code>optional string memo = 2;</code>
     *
     * <pre>
     * human-readable message for customer
     * </pre>
     */
    public boolean hasMemo() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string memo = 2;</code>
     *
     * <pre>
     * human-readable message for customer
     * </pre>
     */
    public java.lang.String getMemo() {
      java.lang.Object ref = memo_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          memo_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string memo = 2;</code>
     *
     * <pre>
     * human-readable message for customer
     * </pre>
     */
    public com.google.protobuf.ByteString
        getMemoBytes() {
      java.lang.Object ref = memo_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        memo_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      payment_ = lighthouse.protocol.LHProtos.Pledge.getDefaultInstance();
      memo_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasPayment()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getPayment().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, payment_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getMemoBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, payment_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getMemoBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static lighthouse.protocol.LHProtos.PledgeACK parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static lighthouse.protocol.LHProtos.PledgeACK parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static lighthouse.protocol.LHProtos.PledgeACK parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static lighthouse.protocol.LHProtos.PledgeACK parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static lighthouse.protocol.LHProtos.PledgeACK parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static lighthouse.protocol.LHProtos.PledgeACK parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static lighthouse.protocol.LHProtos.PledgeACK parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static lighthouse.protocol.LHProtos.PledgeACK parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static lighthouse.protocol.LHProtos.PledgeACK parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static lighthouse.protocol.LHProtos.PledgeACK parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(lighthouse.protocol.LHProtos.PledgeACK prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code lighthouse.PledgeACK}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements lighthouse.protocol.LHProtos.PledgeACKOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return lighthouse.protocol.LHProtos.internal_static_lighthouse_PledgeACK_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return lighthouse.protocol.LHProtos.internal_static_lighthouse_PledgeACK_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                lighthouse.protocol.LHProtos.PledgeACK.class, lighthouse.protocol.LHProtos.PledgeACK.Builder.class);
      }

      // Construct using lighthouse.protocol.LHProtos.PledgeACK.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPaymentFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (paymentBuilder_ == null) {
          payment_ = lighthouse.protocol.LHProtos.Pledge.getDefaultInstance();
        } else {
          paymentBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        memo_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return lighthouse.protocol.LHProtos.internal_static_lighthouse_PledgeACK_descriptor;
      }

      public lighthouse.protocol.LHProtos.PledgeACK getDefaultInstanceForType() {
        return lighthouse.protocol.LHProtos.PledgeACK.getDefaultInstance();
      }

      public lighthouse.protocol.LHProtos.PledgeACK build() {
        lighthouse.protocol.LHProtos.PledgeACK result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public lighthouse.protocol.LHProtos.PledgeACK buildPartial() {
        lighthouse.protocol.LHProtos.PledgeACK result = new lighthouse.protocol.LHProtos.PledgeACK(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (paymentBuilder_ == null) {
          result.payment_ = payment_;
        } else {
          result.payment_ = paymentBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.memo_ = memo_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof lighthouse.protocol.LHProtos.PledgeACK) {
          return mergeFrom((lighthouse.protocol.LHProtos.PledgeACK)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(lighthouse.protocol.LHProtos.PledgeACK other) {
        if (other == lighthouse.protocol.LHProtos.PledgeACK.getDefaultInstance()) return this;
        if (other.hasPayment()) {
          mergePayment(other.getPayment());
        }
        if (other.hasMemo()) {
          bitField0_ |= 0x00000002;
          memo_ = other.memo_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasPayment()) {
          
          return false;
        }
        if (!getPayment().isInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        lighthouse.protocol.LHProtos.PledgeACK parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (lighthouse.protocol.LHProtos.PledgeACK) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .lighthouse.Pledge payment = 1;
      private lighthouse.protocol.LHProtos.Pledge payment_ = lighthouse.protocol.LHProtos.Pledge.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          lighthouse.protocol.LHProtos.Pledge, lighthouse.protocol.LHProtos.Pledge.Builder, lighthouse.protocol.LHProtos.PledgeOrBuilder> paymentBuilder_;
      /**
       * <code>required .lighthouse.Pledge payment = 1;</code>
       *
       * <pre>
       * Payment message that triggered this ACK
       * </pre>
       */
      public boolean hasPayment() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .lighthouse.Pledge payment = 1;</code>
       *
       * <pre>
       * Payment message that triggered this ACK
       * </pre>
       */
      public lighthouse.protocol.LHProtos.Pledge getPayment() {
        if (paymentBuilder_ == null) {
          return payment_;
        } else {
          return paymentBuilder_.getMessage();
        }
      }
      /**
       * <code>required .lighthouse.Pledge payment = 1;</code>
       *
       * <pre>
       * Payment message that triggered this ACK
       * </pre>
       */
      public Builder setPayment(lighthouse.protocol.LHProtos.Pledge value) {
        if (paymentBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          payment_ = value;
          onChanged();
        } else {
          paymentBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .lighthouse.Pledge payment = 1;</code>
       *
       * <pre>
       * Payment message that triggered this ACK
       * </pre>
       */
      public Builder setPayment(
          lighthouse.protocol.LHProtos.Pledge.Builder builderForValue) {
        if (paymentBuilder_ == null) {
          payment_ = builderForValue.build();
          onChanged();
        } else {
          paymentBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .lighthouse.Pledge payment = 1;</code>
       *
       * <pre>
       * Payment message that triggered this ACK
       * </pre>
       */
      public Builder mergePayment(lighthouse.protocol.LHProtos.Pledge value) {
        if (paymentBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              payment_ != lighthouse.protocol.LHProtos.Pledge.getDefaultInstance()) {
            payment_ =
              lighthouse.protocol.LHProtos.Pledge.newBuilder(payment_).mergeFrom(value).buildPartial();
          } else {
            payment_ = value;
          }
          onChanged();
        } else {
          paymentBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .lighthouse.Pledge payment = 1;</code>
       *
       * <pre>
       * Payment message that triggered this ACK
       * </pre>
       */
      public Builder clearPayment() {
        if (paymentBuilder_ == null) {
          payment_ = lighthouse.protocol.LHProtos.Pledge.getDefaultInstance();
          onChanged();
        } else {
          paymentBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>required .lighthouse.Pledge payment = 1;</code>
       *
       * <pre>
       * Payment message that triggered this ACK
       * </pre>
       */
      public lighthouse.protocol.LHProtos.Pledge.Builder getPaymentBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getPaymentFieldBuilder().getBuilder();
      }
      /**
       * <code>required .lighthouse.Pledge payment = 1;</code>
       *
       * <pre>
       * Payment message that triggered this ACK
       * </pre>
       */
      public lighthouse.protocol.LHProtos.PledgeOrBuilder getPaymentOrBuilder() {
        if (paymentBuilder_ != null) {
          return paymentBuilder_.getMessageOrBuilder();
        } else {
          return payment_;
        }
      }
      /**
       * <code>required .lighthouse.Pledge payment = 1;</code>
       *
       * <pre>
       * Payment message that triggered this ACK
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          lighthouse.protocol.LHProtos.Pledge, lighthouse.protocol.LHProtos.Pledge.Builder, lighthouse.protocol.LHProtos.PledgeOrBuilder> 
          getPaymentFieldBuilder() {
        if (paymentBuilder_ == null) {
          paymentBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              lighthouse.protocol.LHProtos.Pledge, lighthouse.protocol.LHProtos.Pledge.Builder, lighthouse.protocol.LHProtos.PledgeOrBuilder>(
                  payment_,
                  getParentForChildren(),
                  isClean());
          payment_ = null;
        }
        return paymentBuilder_;
      }

      // optional string memo = 2;
      private java.lang.Object memo_ = "";
      /**
       * <code>optional string memo = 2;</code>
       *
       * <pre>
       * human-readable message for customer
       * </pre>
       */
      public boolean hasMemo() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string memo = 2;</code>
       *
       * <pre>
       * human-readable message for customer
       * </pre>
       */
      public java.lang.String getMemo() {
        java.lang.Object ref = memo_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          memo_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string memo = 2;</code>
       *
       * <pre>
       * human-readable message for customer
       * </pre>
       */
      public com.google.protobuf.ByteString
          getMemoBytes() {
        java.lang.Object ref = memo_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          memo_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string memo = 2;</code>
       *
       * <pre>
       * human-readable message for customer
       * </pre>
       */
      public Builder setMemo(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        memo_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string memo = 2;</code>
       *
       * <pre>
       * human-readable message for customer
       * </pre>
       */
      public Builder clearMemo() {
        bitField0_ = (bitField0_ & ~0x00000002);
        memo_ = getDefaultInstance().getMemo();
        onChanged();
        return this;
      }
      /**
       * <code>optional string memo = 2;</code>
       *
       * <pre>
       * human-readable message for customer
       * </pre>
       */
      public Builder setMemoBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        memo_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:lighthouse.PledgeACK)
    }

    static {
      defaultInstance = new PledgeACK(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:lighthouse.PledgeACK)
  }

  public interface ProjectStatusOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string id = 1;
    /**
     * <code>required string id = 1;</code>
     */
    boolean hasId();
    /**
     * <code>required string id = 1;</code>
     */
    java.lang.String getId();
    /**
     * <code>required string id = 1;</code>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    // required uint64 timestamp = 2;
    /**
     * <code>required uint64 timestamp = 2;</code>
     *
     * <pre>
     * Timestamp in seconds since the epoch when the status was vended.
     * </pre>
     */
    boolean hasTimestamp();
    /**
     * <code>required uint64 timestamp = 2;</code>
     *
     * <pre>
     * Timestamp in seconds since the epoch when the status was vended.
     * </pre>
     */
    long getTimestamp();

    // required uint64 value_pledged_so_far = 3;
    /**
     * <code>required uint64 value_pledged_so_far = 3;</code>
     */
    boolean hasValuePledgedSoFar();
    /**
     * <code>required uint64 value_pledged_so_far = 3;</code>
     */
    long getValuePledgedSoFar();

    // repeated .lighthouse.Pledge pledges = 4;
    /**
     * <code>repeated .lighthouse.Pledge pledges = 4;</code>
     *
     * <pre>
     * Pledges with transaction data removed.
     * TODO: Allow the project creator to decide that pledges should be public (implies anyone can close the contract
     * when it's completed).
     * </pre>
     */
    java.util.List<lighthouse.protocol.LHProtos.Pledge> 
        getPledgesList();
    /**
     * <code>repeated .lighthouse.Pledge pledges = 4;</code>
     *
     * <pre>
     * Pledges with transaction data removed.
     * TODO: Allow the project creator to decide that pledges should be public (implies anyone can close the contract
     * when it's completed).
     * </pre>
     */
    lighthouse.protocol.LHProtos.Pledge getPledges(int index);
    /**
     * <code>repeated .lighthouse.Pledge pledges = 4;</code>
     *
     * <pre>
     * Pledges with transaction data removed.
     * TODO: Allow the project creator to decide that pledges should be public (implies anyone can close the contract
     * when it's completed).
     * </pre>
     */
    int getPledgesCount();
    /**
     * <code>repeated .lighthouse.Pledge pledges = 4;</code>
     *
     * <pre>
     * Pledges with transaction data removed.
     * TODO: Allow the project creator to decide that pledges should be public (implies anyone can close the contract
     * when it's completed).
     * </pre>
     */
    java.util.List<? extends lighthouse.protocol.LHProtos.PledgeOrBuilder> 
        getPledgesOrBuilderList();
    /**
     * <code>repeated .lighthouse.Pledge pledges = 4;</code>
     *
     * <pre>
     * Pledges with transaction data removed.
     * TODO: Allow the project creator to decide that pledges should be public (implies anyone can close the contract
     * when it's completed).
     * </pre>
     */
    lighthouse.protocol.LHProtos.PledgeOrBuilder getPledgesOrBuilder(
        int index);

    // optional bytes claimed_by = 5;
    /**
     * <code>optional bytes claimed_by = 5;</code>
     *
     * <pre>
     * If present, contains tx hash of the contract transaction. Note that the client can often already detect this
     * by simply watching the block chain for a payment to the project outputs, but when set this overrides the
     * clients heuristics. All it's used for is creating a "View in block explorer" button in the UI.
     * </pre>
     */
    boolean hasClaimedBy();
    /**
     * <code>optional bytes claimed_by = 5;</code>
     *
     * <pre>
     * If present, contains tx hash of the contract transaction. Note that the client can often already detect this
     * by simply watching the block chain for a payment to the project outputs, but when set this overrides the
     * clients heuristics. All it's used for is creating a "View in block explorer" button in the UI.
     * </pre>
     */
    com.google.protobuf.ByteString getClaimedBy();
  }
  /**
   * Protobuf type {@code lighthouse.ProjectStatus}
   *
   * <pre>
   * Something only returned in the interactive server use case.
   * </pre>
   */
  public static final class ProjectStatus extends
      com.google.protobuf.GeneratedMessage
      implements ProjectStatusOrBuilder {
    // Use ProjectStatus.newBuilder() to construct.
    private ProjectStatus(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ProjectStatus(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ProjectStatus defaultInstance;
    public static ProjectStatus getDefaultInstance() {
      return defaultInstance;
    }

    public ProjectStatus getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ProjectStatus(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              id_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              timestamp_ = input.readUInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              valuePledgedSoFar_ = input.readUInt64();
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                pledges_ = new java.util.ArrayList<lighthouse.protocol.LHProtos.Pledge>();
                mutable_bitField0_ |= 0x00000008;
              }
              pledges_.add(input.readMessage(lighthouse.protocol.LHProtos.Pledge.PARSER, extensionRegistry));
              break;
            }
            case 42: {
              bitField0_ |= 0x00000008;
              claimedBy_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          pledges_ = java.util.Collections.unmodifiableList(pledges_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return lighthouse.protocol.LHProtos.internal_static_lighthouse_ProjectStatus_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return lighthouse.protocol.LHProtos.internal_static_lighthouse_ProjectStatus_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              lighthouse.protocol.LHProtos.ProjectStatus.class, lighthouse.protocol.LHProtos.ProjectStatus.Builder.class);
    }

    public static com.google.protobuf.Parser<ProjectStatus> PARSER =
        new com.google.protobuf.AbstractParser<ProjectStatus>() {
      public ProjectStatus parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ProjectStatus(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ProjectStatus> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private java.lang.Object id_;
    /**
     * <code>required string id = 1;</code>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string id = 1;</code>
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          id_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required uint64 timestamp = 2;
    public static final int TIMESTAMP_FIELD_NUMBER = 2;
    private long timestamp_;
    /**
     * <code>required uint64 timestamp = 2;</code>
     *
     * <pre>
     * Timestamp in seconds since the epoch when the status was vended.
     * </pre>
     */
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint64 timestamp = 2;</code>
     *
     * <pre>
     * Timestamp in seconds since the epoch when the status was vended.
     * </pre>
     */
    public long getTimestamp() {
      return timestamp_;
    }

    // required uint64 value_pledged_so_far = 3;
    public static final int VALUE_PLEDGED_SO_FAR_FIELD_NUMBER = 3;
    private long valuePledgedSoFar_;
    /**
     * <code>required uint64 value_pledged_so_far = 3;</code>
     */
    public boolean hasValuePledgedSoFar() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required uint64 value_pledged_so_far = 3;</code>
     */
    public long getValuePledgedSoFar() {
      return valuePledgedSoFar_;
    }

    // repeated .lighthouse.Pledge pledges = 4;
    public static final int PLEDGES_FIELD_NUMBER = 4;
    private java.util.List<lighthouse.protocol.LHProtos.Pledge> pledges_;
    /**
     * <code>repeated .lighthouse.Pledge pledges = 4;</code>
     *
     * <pre>
     * Pledges with transaction data removed.
     * TODO: Allow the project creator to decide that pledges should be public (implies anyone can close the contract
     * when it's completed).
     * </pre>
     */
    public java.util.List<lighthouse.protocol.LHProtos.Pledge> getPledgesList() {
      return pledges_;
    }
    /**
     * <code>repeated .lighthouse.Pledge pledges = 4;</code>
     *
     * <pre>
     * Pledges with transaction data removed.
     * TODO: Allow the project creator to decide that pledges should be public (implies anyone can close the contract
     * when it's completed).
     * </pre>
     */
    public java.util.List<? extends lighthouse.protocol.LHProtos.PledgeOrBuilder> 
        getPledgesOrBuilderList() {
      return pledges_;
    }
    /**
     * <code>repeated .lighthouse.Pledge pledges = 4;</code>
     *
     * <pre>
     * Pledges with transaction data removed.
     * TODO: Allow the project creator to decide that pledges should be public (implies anyone can close the contract
     * when it's completed).
     * </pre>
     */
    public int getPledgesCount() {
      return pledges_.size();
    }
    /**
     * <code>repeated .lighthouse.Pledge pledges = 4;</code>
     *
     * <pre>
     * Pledges with transaction data removed.
     * TODO: Allow the project creator to decide that pledges should be public (implies anyone can close the contract
     * when it's completed).
     * </pre>
     */
    public lighthouse.protocol.LHProtos.Pledge getPledges(int index) {
      return pledges_.get(index);
    }
    /**
     * <code>repeated .lighthouse.Pledge pledges = 4;</code>
     *
     * <pre>
     * Pledges with transaction data removed.
     * TODO: Allow the project creator to decide that pledges should be public (implies anyone can close the contract
     * when it's completed).
     * </pre>
     */
    public lighthouse.protocol.LHProtos.PledgeOrBuilder getPledgesOrBuilder(
        int index) {
      return pledges_.get(index);
    }

    // optional bytes claimed_by = 5;
    public static final int CLAIMED_BY_FIELD_NUMBER = 5;
    private com.google.protobuf.ByteString claimedBy_;
    /**
     * <code>optional bytes claimed_by = 5;</code>
     *
     * <pre>
     * If present, contains tx hash of the contract transaction. Note that the client can often already detect this
     * by simply watching the block chain for a payment to the project outputs, but when set this overrides the
     * clients heuristics. All it's used for is creating a "View in block explorer" button in the UI.
     * </pre>
     */
    public boolean hasClaimedBy() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional bytes claimed_by = 5;</code>
     *
     * <pre>
     * If present, contains tx hash of the contract transaction. Note that the client can often already detect this
     * by simply watching the block chain for a payment to the project outputs, but when set this overrides the
     * clients heuristics. All it's used for is creating a "View in block explorer" button in the UI.
     * </pre>
     */
    public com.google.protobuf.ByteString getClaimedBy() {
      return claimedBy_;
    }

    private void initFields() {
      id_ = "";
      timestamp_ = 0L;
      valuePledgedSoFar_ = 0L;
      pledges_ = java.util.Collections.emptyList();
      claimedBy_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTimestamp()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasValuePledgedSoFar()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getPledgesCount(); i++) {
        if (!getPledges(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, timestamp_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt64(3, valuePledgedSoFar_);
      }
      for (int i = 0; i < pledges_.size(); i++) {
        output.writeMessage(4, pledges_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(5, claimedBy_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, timestamp_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, valuePledgedSoFar_);
      }
      for (int i = 0; i < pledges_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, pledges_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, claimedBy_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static lighthouse.protocol.LHProtos.ProjectStatus parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static lighthouse.protocol.LHProtos.ProjectStatus parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static lighthouse.protocol.LHProtos.ProjectStatus parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static lighthouse.protocol.LHProtos.ProjectStatus parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static lighthouse.protocol.LHProtos.ProjectStatus parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static lighthouse.protocol.LHProtos.ProjectStatus parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static lighthouse.protocol.LHProtos.ProjectStatus parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static lighthouse.protocol.LHProtos.ProjectStatus parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static lighthouse.protocol.LHProtos.ProjectStatus parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static lighthouse.protocol.LHProtos.ProjectStatus parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(lighthouse.protocol.LHProtos.ProjectStatus prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code lighthouse.ProjectStatus}
     *
     * <pre>
     * Something only returned in the interactive server use case.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements lighthouse.protocol.LHProtos.ProjectStatusOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return lighthouse.protocol.LHProtos.internal_static_lighthouse_ProjectStatus_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return lighthouse.protocol.LHProtos.internal_static_lighthouse_ProjectStatus_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                lighthouse.protocol.LHProtos.ProjectStatus.class, lighthouse.protocol.LHProtos.ProjectStatus.Builder.class);
      }

      // Construct using lighthouse.protocol.LHProtos.ProjectStatus.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPledgesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        timestamp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        valuePledgedSoFar_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (pledgesBuilder_ == null) {
          pledges_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          pledgesBuilder_.clear();
        }
        claimedBy_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return lighthouse.protocol.LHProtos.internal_static_lighthouse_ProjectStatus_descriptor;
      }

      public lighthouse.protocol.LHProtos.ProjectStatus getDefaultInstanceForType() {
        return lighthouse.protocol.LHProtos.ProjectStatus.getDefaultInstance();
      }

      public lighthouse.protocol.LHProtos.ProjectStatus build() {
        lighthouse.protocol.LHProtos.ProjectStatus result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public lighthouse.protocol.LHProtos.ProjectStatus buildPartial() {
        lighthouse.protocol.LHProtos.ProjectStatus result = new lighthouse.protocol.LHProtos.ProjectStatus(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.timestamp_ = timestamp_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.valuePledgedSoFar_ = valuePledgedSoFar_;
        if (pledgesBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            pledges_ = java.util.Collections.unmodifiableList(pledges_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.pledges_ = pledges_;
        } else {
          result.pledges_ = pledgesBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.claimedBy_ = claimedBy_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof lighthouse.protocol.LHProtos.ProjectStatus) {
          return mergeFrom((lighthouse.protocol.LHProtos.ProjectStatus)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(lighthouse.protocol.LHProtos.ProjectStatus other) {
        if (other == lighthouse.protocol.LHProtos.ProjectStatus.getDefaultInstance()) return this;
        if (other.hasId()) {
          bitField0_ |= 0x00000001;
          id_ = other.id_;
          onChanged();
        }
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        if (other.hasValuePledgedSoFar()) {
          setValuePledgedSoFar(other.getValuePledgedSoFar());
        }
        if (pledgesBuilder_ == null) {
          if (!other.pledges_.isEmpty()) {
            if (pledges_.isEmpty()) {
              pledges_ = other.pledges_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensurePledgesIsMutable();
              pledges_.addAll(other.pledges_);
            }
            onChanged();
          }
        } else {
          if (!other.pledges_.isEmpty()) {
            if (pledgesBuilder_.isEmpty()) {
              pledgesBuilder_.dispose();
              pledgesBuilder_ = null;
              pledges_ = other.pledges_;
              bitField0_ = (bitField0_ & ~0x00000008);
              pledgesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPledgesFieldBuilder() : null;
            } else {
              pledgesBuilder_.addAllMessages(other.pledges_);
            }
          }
        }
        if (other.hasClaimedBy()) {
          setClaimedBy(other.getClaimedBy());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        if (!hasTimestamp()) {
          
          return false;
        }
        if (!hasValuePledgedSoFar()) {
          
          return false;
        }
        for (int i = 0; i < getPledgesCount(); i++) {
          if (!getPledges(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        lighthouse.protocol.LHProtos.ProjectStatus parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (lighthouse.protocol.LHProtos.ProjectStatus) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string id = 1;
      private java.lang.Object id_ = "";
      /**
       * <code>required string id = 1;</code>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string id = 1;</code>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string id = 1;</code>
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string id = 1;</code>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <code>required string id = 1;</code>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }

      // required uint64 timestamp = 2;
      private long timestamp_ ;
      /**
       * <code>required uint64 timestamp = 2;</code>
       *
       * <pre>
       * Timestamp in seconds since the epoch when the status was vended.
       * </pre>
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint64 timestamp = 2;</code>
       *
       * <pre>
       * Timestamp in seconds since the epoch when the status was vended.
       * </pre>
       */
      public long getTimestamp() {
        return timestamp_;
      }
      /**
       * <code>required uint64 timestamp = 2;</code>
       *
       * <pre>
       * Timestamp in seconds since the epoch when the status was vended.
       * </pre>
       */
      public Builder setTimestamp(long value) {
        bitField0_ |= 0x00000002;
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 timestamp = 2;</code>
       *
       * <pre>
       * Timestamp in seconds since the epoch when the status was vended.
       * </pre>
       */
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000002);
        timestamp_ = 0L;
        onChanged();
        return this;
      }

      // required uint64 value_pledged_so_far = 3;
      private long valuePledgedSoFar_ ;
      /**
       * <code>required uint64 value_pledged_so_far = 3;</code>
       */
      public boolean hasValuePledgedSoFar() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required uint64 value_pledged_so_far = 3;</code>
       */
      public long getValuePledgedSoFar() {
        return valuePledgedSoFar_;
      }
      /**
       * <code>required uint64 value_pledged_so_far = 3;</code>
       */
      public Builder setValuePledgedSoFar(long value) {
        bitField0_ |= 0x00000004;
        valuePledgedSoFar_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 value_pledged_so_far = 3;</code>
       */
      public Builder clearValuePledgedSoFar() {
        bitField0_ = (bitField0_ & ~0x00000004);
        valuePledgedSoFar_ = 0L;
        onChanged();
        return this;
      }

      // repeated .lighthouse.Pledge pledges = 4;
      private java.util.List<lighthouse.protocol.LHProtos.Pledge> pledges_ =
        java.util.Collections.emptyList();
      private void ensurePledgesIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          pledges_ = new java.util.ArrayList<lighthouse.protocol.LHProtos.Pledge>(pledges_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          lighthouse.protocol.LHProtos.Pledge, lighthouse.protocol.LHProtos.Pledge.Builder, lighthouse.protocol.LHProtos.PledgeOrBuilder> pledgesBuilder_;

      /**
       * <code>repeated .lighthouse.Pledge pledges = 4;</code>
       *
       * <pre>
       * Pledges with transaction data removed.
       * TODO: Allow the project creator to decide that pledges should be public (implies anyone can close the contract
       * when it's completed).
       * </pre>
       */
      public java.util.List<lighthouse.protocol.LHProtos.Pledge> getPledgesList() {
        if (pledgesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(pledges_);
        } else {
          return pledgesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .lighthouse.Pledge pledges = 4;</code>
       *
       * <pre>
       * Pledges with transaction data removed.
       * TODO: Allow the project creator to decide that pledges should be public (implies anyone can close the contract
       * when it's completed).
       * </pre>
       */
      public int getPledgesCount() {
        if (pledgesBuilder_ == null) {
          return pledges_.size();
        } else {
          return pledgesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .lighthouse.Pledge pledges = 4;</code>
       *
       * <pre>
       * Pledges with transaction data removed.
       * TODO: Allow the project creator to decide that pledges should be public (implies anyone can close the contract
       * when it's completed).
       * </pre>
       */
      public lighthouse.protocol.LHProtos.Pledge getPledges(int index) {
        if (pledgesBuilder_ == null) {
          return pledges_.get(index);
        } else {
          return pledgesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .lighthouse.Pledge pledges = 4;</code>
       *
       * <pre>
       * Pledges with transaction data removed.
       * TODO: Allow the project creator to decide that pledges should be public (implies anyone can close the contract
       * when it's completed).
       * </pre>
       */
      public Builder setPledges(
          int index, lighthouse.protocol.LHProtos.Pledge value) {
        if (pledgesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePledgesIsMutable();
          pledges_.set(index, value);
          onChanged();
        } else {
          pledgesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .lighthouse.Pledge pledges = 4;</code>
       *
       * <pre>
       * Pledges with transaction data removed.
       * TODO: Allow the project creator to decide that pledges should be public (implies anyone can close the contract
       * when it's completed).
       * </pre>
       */
      public Builder setPledges(
          int index, lighthouse.protocol.LHProtos.Pledge.Builder builderForValue) {
        if (pledgesBuilder_ == null) {
          ensurePledgesIsMutable();
          pledges_.set(index, builderForValue.build());
          onChanged();
        } else {
          pledgesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .lighthouse.Pledge pledges = 4;</code>
       *
       * <pre>
       * Pledges with transaction data removed.
       * TODO: Allow the project creator to decide that pledges should be public (implies anyone can close the contract
       * when it's completed).
       * </pre>
       */
      public Builder addPledges(lighthouse.protocol.LHProtos.Pledge value) {
        if (pledgesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePledgesIsMutable();
          pledges_.add(value);
          onChanged();
        } else {
          pledgesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .lighthouse.Pledge pledges = 4;</code>
       *
       * <pre>
       * Pledges with transaction data removed.
       * TODO: Allow the project creator to decide that pledges should be public (implies anyone can close the contract
       * when it's completed).
       * </pre>
       */
      public Builder addPledges(
          int index, lighthouse.protocol.LHProtos.Pledge value) {
        if (pledgesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePledgesIsMutable();
          pledges_.add(index, value);
          onChanged();
        } else {
          pledgesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .lighthouse.Pledge pledges = 4;</code>
       *
       * <pre>
       * Pledges with transaction data removed.
       * TODO: Allow the project creator to decide that pledges should be public (implies anyone can close the contract
       * when it's completed).
       * </pre>
       */
      public Builder addPledges(
          lighthouse.protocol.LHProtos.Pledge.Builder builderForValue) {
        if (pledgesBuilder_ == null) {
          ensurePledgesIsMutable();
          pledges_.add(builderForValue.build());
          onChanged();
        } else {
          pledgesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .lighthouse.Pledge pledges = 4;</code>
       *
       * <pre>
       * Pledges with transaction data removed.
       * TODO: Allow the project creator to decide that pledges should be public (implies anyone can close the contract
       * when it's completed).
       * </pre>
       */
      public Builder addPledges(
          int index, lighthouse.protocol.LHProtos.Pledge.Builder builderForValue) {
        if (pledgesBuilder_ == null) {
          ensurePledgesIsMutable();
          pledges_.add(index, builderForValue.build());
          onChanged();
        } else {
          pledgesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .lighthouse.Pledge pledges = 4;</code>
       *
       * <pre>
       * Pledges with transaction data removed.
       * TODO: Allow the project creator to decide that pledges should be public (implies anyone can close the contract
       * when it's completed).
       * </pre>
       */
      public Builder addAllPledges(
          java.lang.Iterable<? extends lighthouse.protocol.LHProtos.Pledge> values) {
        if (pledgesBuilder_ == null) {
          ensurePledgesIsMutable();
          super.addAll(values, pledges_);
          onChanged();
        } else {
          pledgesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .lighthouse.Pledge pledges = 4;</code>
       *
       * <pre>
       * Pledges with transaction data removed.
       * TODO: Allow the project creator to decide that pledges should be public (implies anyone can close the contract
       * when it's completed).
       * </pre>
       */
      public Builder clearPledges() {
        if (pledgesBuilder_ == null) {
          pledges_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          pledgesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .lighthouse.Pledge pledges = 4;</code>
       *
       * <pre>
       * Pledges with transaction data removed.
       * TODO: Allow the project creator to decide that pledges should be public (implies anyone can close the contract
       * when it's completed).
       * </pre>
       */
      public Builder removePledges(int index) {
        if (pledgesBuilder_ == null) {
          ensurePledgesIsMutable();
          pledges_.remove(index);
          onChanged();
        } else {
          pledgesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .lighthouse.Pledge pledges = 4;</code>
       *
       * <pre>
       * Pledges with transaction data removed.
       * TODO: Allow the project creator to decide that pledges should be public (implies anyone can close the contract
       * when it's completed).
       * </pre>
       */
      public lighthouse.protocol.LHProtos.Pledge.Builder getPledgesBuilder(
          int index) {
        return getPledgesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .lighthouse.Pledge pledges = 4;</code>
       *
       * <pre>
       * Pledges with transaction data removed.
       * TODO: Allow the project creator to decide that pledges should be public (implies anyone can close the contract
       * when it's completed).
       * </pre>
       */
      public lighthouse.protocol.LHProtos.PledgeOrBuilder getPledgesOrBuilder(
          int index) {
        if (pledgesBuilder_ == null) {
          return pledges_.get(index);  } else {
          return pledgesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .lighthouse.Pledge pledges = 4;</code>
       *
       * <pre>
       * Pledges with transaction data removed.
       * TODO: Allow the project creator to decide that pledges should be public (implies anyone can close the contract
       * when it's completed).
       * </pre>
       */
      public java.util.List<? extends lighthouse.protocol.LHProtos.PledgeOrBuilder> 
           getPledgesOrBuilderList() {
        if (pledgesBuilder_ != null) {
          return pledgesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(pledges_);
        }
      }
      /**
       * <code>repeated .lighthouse.Pledge pledges = 4;</code>
       *
       * <pre>
       * Pledges with transaction data removed.
       * TODO: Allow the project creator to decide that pledges should be public (implies anyone can close the contract
       * when it's completed).
       * </pre>
       */
      public lighthouse.protocol.LHProtos.Pledge.Builder addPledgesBuilder() {
        return getPledgesFieldBuilder().addBuilder(
            lighthouse.protocol.LHProtos.Pledge.getDefaultInstance());
      }
      /**
       * <code>repeated .lighthouse.Pledge pledges = 4;</code>
       *
       * <pre>
       * Pledges with transaction data removed.
       * TODO: Allow the project creator to decide that pledges should be public (implies anyone can close the contract
       * when it's completed).
       * </pre>
       */
      public lighthouse.protocol.LHProtos.Pledge.Builder addPledgesBuilder(
          int index) {
        return getPledgesFieldBuilder().addBuilder(
            index, lighthouse.protocol.LHProtos.Pledge.getDefaultInstance());
      }
      /**
       * <code>repeated .lighthouse.Pledge pledges = 4;</code>
       *
       * <pre>
       * Pledges with transaction data removed.
       * TODO: Allow the project creator to decide that pledges should be public (implies anyone can close the contract
       * when it's completed).
       * </pre>
       */
      public java.util.List<lighthouse.protocol.LHProtos.Pledge.Builder> 
           getPledgesBuilderList() {
        return getPledgesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          lighthouse.protocol.LHProtos.Pledge, lighthouse.protocol.LHProtos.Pledge.Builder, lighthouse.protocol.LHProtos.PledgeOrBuilder> 
          getPledgesFieldBuilder() {
        if (pledgesBuilder_ == null) {
          pledgesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              lighthouse.protocol.LHProtos.Pledge, lighthouse.protocol.LHProtos.Pledge.Builder, lighthouse.protocol.LHProtos.PledgeOrBuilder>(
                  pledges_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          pledges_ = null;
        }
        return pledgesBuilder_;
      }

      // optional bytes claimed_by = 5;
      private com.google.protobuf.ByteString claimedBy_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes claimed_by = 5;</code>
       *
       * <pre>
       * If present, contains tx hash of the contract transaction. Note that the client can often already detect this
       * by simply watching the block chain for a payment to the project outputs, but when set this overrides the
       * clients heuristics. All it's used for is creating a "View in block explorer" button in the UI.
       * </pre>
       */
      public boolean hasClaimedBy() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional bytes claimed_by = 5;</code>
       *
       * <pre>
       * If present, contains tx hash of the contract transaction. Note that the client can often already detect this
       * by simply watching the block chain for a payment to the project outputs, but when set this overrides the
       * clients heuristics. All it's used for is creating a "View in block explorer" button in the UI.
       * </pre>
       */
      public com.google.protobuf.ByteString getClaimedBy() {
        return claimedBy_;
      }
      /**
       * <code>optional bytes claimed_by = 5;</code>
       *
       * <pre>
       * If present, contains tx hash of the contract transaction. Note that the client can often already detect this
       * by simply watching the block chain for a payment to the project outputs, but when set this overrides the
       * clients heuristics. All it's used for is creating a "View in block explorer" button in the UI.
       * </pre>
       */
      public Builder setClaimedBy(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        claimedBy_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes claimed_by = 5;</code>
       *
       * <pre>
       * If present, contains tx hash of the contract transaction. Note that the client can often already detect this
       * by simply watching the block chain for a payment to the project outputs, but when set this overrides the
       * clients heuristics. All it's used for is creating a "View in block explorer" button in the UI.
       * </pre>
       */
      public Builder clearClaimedBy() {
        bitField0_ = (bitField0_ & ~0x00000010);
        claimedBy_ = getDefaultInstance().getClaimedBy();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:lighthouse.ProjectStatus)
    }

    static {
      defaultInstance = new ProjectStatus(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:lighthouse.ProjectStatus)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_lighthouse_Output_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_lighthouse_Output_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_lighthouse_ProjectExtraDetails_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_lighthouse_ProjectExtraDetails_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_lighthouse_OwnerData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_lighthouse_OwnerData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_lighthouse_ProjectDetails_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_lighthouse_ProjectDetails_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_lighthouse_Project_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_lighthouse_Project_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_lighthouse_X509Certificates_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_lighthouse_X509Certificates_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_lighthouse_PledgeDetails_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_lighthouse_PledgeDetails_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_lighthouse_Pledge_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_lighthouse_Pledge_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_lighthouse_PledgeACK_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_lighthouse_PledgeACK_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_lighthouse_ProjectStatus_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_lighthouse_ProjectStatus_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\024extended-bip70.proto\022\nlighthouse\"+\n\006Ou" +
      "tput\022\021\n\006amount\030\001 \001(\004:\0010\022\016\n\006script\030\002 \002(\014\"" +
      "s\n\023ProjectExtraDetails\022\r\n\005title\030\001 \002(\t\022\023\n" +
      "\013cover_image\030\002 \001(\014\022\020\n\010auth_key\030\003 \001(\014\022\027\n\017" +
      "min_pledge_size\030\004 \001(\003\022\r\n\005email\030\005 \001(\t\"#\n\t" +
      "OwnerData\022\026\n\016auth_key_index\030\001 \001(\r\"\335\001\n\016Pr" +
      "ojectDetails\022\025\n\007network\030\001 \001(\t:\004main\022#\n\007o" +
      "utputs\030\002 \003(\0132\022.lighthouse.Output\022\014\n\004time" +
      "\030\003 \002(\004\022\017\n\007expires\030\004 \001(\004\022\014\n\004memo\030\005 \001(\t\022\023\n" +
      "\013payment_url\030\006 \001(\t\022\025\n\rmerchant_data\030\007 \001(",
      "\014\0226\n\rextra_details\030e \002(\0132\037.lighthouse.Pr" +
      "ojectExtraDetails\"\216\001\n\007Project\022\"\n\027payment" +
      "_details_version\030\001 \001(\r:\0011\022\026\n\010pki_type\030\002 " +
      "\001(\t:\004none\022\020\n\010pki_data\030\003 \001(\014\022\"\n\032serialize" +
      "d_payment_details\030\004 \002(\014\022\021\n\tsignature\030\005 \001" +
      "(\014\"\'\n\020X509Certificates\022\023\n\013certificate\030\001 " +
      "\003(\014\"\231\001\n\rPledgeDetails\022\014\n\004memo\030\001 \001(\t\022\027\n\017c" +
      "ontact_address\030\002 \001(\t\022\031\n\021total_input_valu" +
      "e\030\003 \002(\004\022\022\n\nproject_id\030\004 \002(\t\022\021\n\ttimestamp" +
      "\030\005 \002(\004\022\021\n\torig_hash\030\006 \001(\014\022\014\n\004name\030\007 \001(\t\"",
      "\217\001\n\006Pledge\022\025\n\rmerchant_data\030\001 \001(\014\022\024\n\014tra" +
      "nsactions\030\002 \003(\014\022%\n\trefund_to\030\003 \003(\0132\022.lig" +
      "hthouse.Output\0221\n\016pledge_details\030d \001(\0132\031" +
      ".lighthouse.PledgeDetails\">\n\tPledgeACK\022#" +
      "\n\007payment\030\001 \002(\0132\022.lighthouse.Pledge\022\014\n\004m" +
      "emo\030\002 \001(\t\"\205\001\n\rProjectStatus\022\n\n\002id\030\001 \002(\t\022" +
      "\021\n\ttimestamp\030\002 \002(\004\022\034\n\024value_pledged_so_f" +
      "ar\030\003 \002(\004\022#\n\007pledges\030\004 \003(\0132\022.lighthouse.P" +
      "ledge\022\022\n\nclaimed_by\030\005 \001(\014B!\n\023lighthouse." +
      "protocolB\010LHProtosH\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_lighthouse_Output_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_lighthouse_Output_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_lighthouse_Output_descriptor,
              new java.lang.String[] { "Amount", "Script", });
          internal_static_lighthouse_ProjectExtraDetails_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_lighthouse_ProjectExtraDetails_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_lighthouse_ProjectExtraDetails_descriptor,
              new java.lang.String[] { "Title", "CoverImage", "AuthKey", "MinPledgeSize", "Email", });
          internal_static_lighthouse_OwnerData_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_lighthouse_OwnerData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_lighthouse_OwnerData_descriptor,
              new java.lang.String[] { "AuthKeyIndex", });
          internal_static_lighthouse_ProjectDetails_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_lighthouse_ProjectDetails_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_lighthouse_ProjectDetails_descriptor,
              new java.lang.String[] { "Network", "Outputs", "Time", "Expires", "Memo", "PaymentUrl", "MerchantData", "ExtraDetails", });
          internal_static_lighthouse_Project_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_lighthouse_Project_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_lighthouse_Project_descriptor,
              new java.lang.String[] { "PaymentDetailsVersion", "PkiType", "PkiData", "SerializedPaymentDetails", "Signature", });
          internal_static_lighthouse_X509Certificates_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_lighthouse_X509Certificates_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_lighthouse_X509Certificates_descriptor,
              new java.lang.String[] { "Certificate", });
          internal_static_lighthouse_PledgeDetails_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_lighthouse_PledgeDetails_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_lighthouse_PledgeDetails_descriptor,
              new java.lang.String[] { "Memo", "ContactAddress", "TotalInputValue", "ProjectId", "Timestamp", "OrigHash", "Name", });
          internal_static_lighthouse_Pledge_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_lighthouse_Pledge_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_lighthouse_Pledge_descriptor,
              new java.lang.String[] { "MerchantData", "Transactions", "RefundTo", "PledgeDetails", });
          internal_static_lighthouse_PledgeACK_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_lighthouse_PledgeACK_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_lighthouse_PledgeACK_descriptor,
              new java.lang.String[] { "Payment", "Memo", });
          internal_static_lighthouse_ProjectStatus_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_lighthouse_ProjectStatus_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_lighthouse_ProjectStatus_descriptor,
              new java.lang.String[] { "Id", "Timestamp", "ValuePledgedSoFar", "Pledges", "ClaimedBy", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
